import { ethers } from 'ethers';
import { Capsule } from '../../Capsule';
import { CoreCapsule } from '../../core/CoreCapsule';
export declare class CapsuleEthersSigner extends ethers.AbstractSigner {
    private capsule;
    private currentWalletId;
    constructor(capsule: Capsule | CoreCapsule, provider?: null | ethers.Provider);
    setCurrentWalletId(walletId: string): void;
    getCurrentWalletId(): string;
    getAddress(): Promise<string>;
    connect(provider: ethers.Provider | null): CapsuleEthersSigner;
    signMessage(message: string | Uint8Array): Promise<string>;
    private validateTx;
    signTransaction(tx: ethers.TransactionRequest): Promise<string>;
    signTypedData(domain: ethers.TypedDataDomain, types: Record<string, Array<ethers.TypedDataField>>, value: Record<string, any>): Promise<string>;
}
