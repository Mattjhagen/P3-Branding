/// <reference types="node" />
/**
 * ECIES decrypt
 * @param {Buffer} privKey Ethereum private key, 32 bytes.
 * @param {Buffer} encrypted Encrypted message, serialized, 113+ bytes
 * @returns {Buffer} plaintext
 */
export declare function ECIESDecrypt(privKey: Buffer, encrypted: Buffer): Buffer;
export declare class KeyContainer {
    walletId: string;
    keyshare: string;
    address: string;
    backupDecryptionKey: string;
    constructor(walletId: string, keyshare: string, address: string);
    static import(serializedContainer: string): KeyContainer;
    getPublicDecryptionKey(): Buffer;
    encryptForSelf(backup: string): string;
    decrypt(encryptedBackup: string): string;
}
