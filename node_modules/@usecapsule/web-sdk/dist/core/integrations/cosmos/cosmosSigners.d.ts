import { AccountData, AminoSignResponse, OfflineAminoSigner, StdSignDoc } from '@cosmjs/amino';
import { OfflineDirectSigner, DirectSignResponse } from '@cosmjs/proto-signing';
import { SignDoc } from 'cosmjs-types/cosmos/tx/v1beta1/tx';
import { CoreCapsule } from '../../CoreCapsule';
declare class CapsuleCosmosSigner {
    readonly prefix: string;
    readonly capsule: CoreCapsule;
    private _currentWalletId?;
    constructor(capsule: CoreCapsule, prefix?: string, currentWalletId?: string);
    get publicKey(): Uint8Array;
    set currentWalletId(walletId: string);
    get currentWalletId(): string;
    get address(): string;
    getAccounts(): Promise<readonly AccountData[]>;
}
export declare class CapsuleProtoSigner extends CapsuleCosmosSigner implements OfflineDirectSigner {
    signDirect(address: string, signDoc: SignDoc): Promise<DirectSignResponse>;
}
export declare class CapsuleAminoSigner extends CapsuleCosmosSigner implements OfflineAminoSigner {
    signAmino(signerAddress: string, signDoc: StdSignDoc): Promise<AminoSignResponse>;
}
export {};
