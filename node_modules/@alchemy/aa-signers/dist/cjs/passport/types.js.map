{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/passport/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { Address, Chain } from \"viem\";\nimport type {\n  CredentialSigner,\n  CredentialCreator,\n  CredentialAssertion,\n  CredentialAttestation,\n} from \"@0xpass/models\";\n\nexport interface PassportAuthenticationParams {\n  username: string;\n  userDisplayName: string;\n  chain: Chain;\n  fallbackProvider: string;\n  endpoint?: string;\n}\n\nexport type PassportAuthenticatedHeaders = {\n  \"x-encrypted-key\": string;\n  \"x-session\": string;\n};\n\nexport type PassportUserInfo = {\n  authenticatedHeaders: PassportAuthenticatedHeaders;\n  addresses: Address[];\n};\n\nexport type SignerWithOptionalCreator = CredentialSigner<\n  CredentialAssertion,\n  any\n> &\n  Partial<CredentialCreator<CredentialAttestation, any>>;\n\nexport type PassportClientParams = {\n  scope_id: string;\n  signer: SignerWithOptionalCreator;\n  endpoint?: string;\n  enclave_public_key?: string;\n  fallbackProvider: string;\n};\n"]}