{"version":3,"file":"signer.js","sourceRoot":"","sources":["../../../src/passport/signer.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  WalletClientSigner,\n  type SmartAccountAuthenticator,\n} from \"@alchemy/aa-core\";\nimport { signerTypePrefix } from \"../constants.js\";\nimport type {\n  PassportAuthenticationParams,\n  PassportClientParams,\n  PassportUserInfo,\n} from \"./types\";\nimport { Passport } from \"@0xpass/passport\";\nimport { createPassportClient } from \"@0xpass/passport-viem-alchemy\";\nimport { http } from \"viem\";\nimport type { TypedDataDefinition, WalletClient, SignableMessage } from \"viem\";\n\nexport class PassportSigner\n  implements\n    SmartAccountAuthenticator<\n      PassportAuthenticationParams,\n      PassportUserInfo,\n      Passport\n    >\n{\n  inner: Passport;\n  private signer: WalletClientSigner | undefined;\n  private authDetails: PassportUserInfo | undefined;\n\n  constructor(params: PassportClientParams | { inner: Passport }) {\n    if (\"inner\" in params) {\n      this.inner = params.inner;\n    } else {\n      this.inner = new Passport(params);\n    }\n  }\n\n  readonly signerType = `${signerTypePrefix}passport`;\n\n  getAddress = async () => {\n    if (!this.inner || !this.signer) {\n      throw new Error(\"Not authenticated\");\n    }\n\n    return this.signer.getAddress();\n  };\n\n  signMessage = async (msg: SignableMessage) => {\n    if (!this.inner || !this.signer) {\n      throw new Error(\"Not authenticated\");\n    }\n    return this.signer.signMessage(msg);\n  };\n\n  signTypedData = async <\n    const TTypedData extends Record<string, unknown>,\n    TPrimaryType extends string = string\n  >(\n    params: TypedDataDefinition<TTypedData, TPrimaryType>\n  ) => {\n    if (!this.inner || !this.signer) {\n      throw new Error(\"Not authenticated\");\n    }\n\n    return this.signer.signTypedData(params);\n  };\n\n  authenticate = async (params: PassportAuthenticationParams) => {\n    if (this.inner == null) throw new Error(\"No provider found\");\n\n    await this.inner.setupEncryption();\n    const [authenticatedHeaders, address] = await this.inner.authenticate({\n      username: params.username,\n      userDisplayName: params.userDisplayName,\n    });\n\n    const fallbackProvider = http(params.fallbackProvider);\n\n    const client: WalletClient = params.endpoint\n      ? createPassportClient(\n          authenticatedHeaders,\n          fallbackProvider,\n          params.chain,\n          params.endpoint\n        )\n      : createPassportClient(\n          authenticatedHeaders,\n          fallbackProvider,\n          params.chain\n        );\n\n    this.signer = new WalletClientSigner(client, this.signerType);\n    this.authDetails = {\n      authenticatedHeaders: authenticatedHeaders,\n      addresses: [address as `0x${string}`],\n    };\n\n    return this.authDetails;\n  };\n\n  getAuthDetails = async () => {\n    if (!this.inner || !this.signer || !this.authDetails) {\n      throw new Error(\"Not authenticated\");\n    }\n\n    return this.authDetails;\n  };\n}\n"]}