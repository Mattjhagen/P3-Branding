{"version":3,"file":"smartAccount.js","sourceRoot":"","sources":["../../../../src/client/decorators/smartAccount.ts"],"names":[],"mappings":";;;AAMA,mGAA6F;AAgBtF,MAAM,cAAc,GAWiC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACvE,qBAAqB,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CACpC,IAAA,8DAA4B,EAAC,MAAM,EAAE,IAAI,CAAC;CAC7C,CAAC,CAAC;AAdU,QAAA,cAAc,kBAcxB","sourcesContent":["import type {\n  SendUserOperationParameters,\n  SmartContractAccount,\n  UserOperationContext,\n} from \"@alchemy/aa-core\";\nimport type { Chain, Client, Transport } from \"viem\";\nimport { simulateUserOperationChanges } from \"../../actions/simulateUserOperationChanges.js\";\nimport type { SimulateUserOperationAssetChangesResponse } from \"../../actions/types.js\";\n\nexport type AlchemySmartAccountClientActions<\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TContext extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = {\n  simulateUserOperation: (\n    args: SendUserOperationParameters<TAccount, TContext>\n  ) => Promise<SimulateUserOperationAssetChangesResponse>;\n};\n\nexport const alchemyActions: <\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TContext extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n>(\n  client: Client<TTransport, TChain, TAccount>\n) => AlchemySmartAccountClientActions<TAccount, TContext> = (client) => ({\n  simulateUserOperation: async (args) =>\n    simulateUserOperationChanges(client, args),\n});\n"]}