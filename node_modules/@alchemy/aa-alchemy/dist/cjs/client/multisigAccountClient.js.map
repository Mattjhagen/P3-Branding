{"version":3,"file":"multisigAccountClient.js","sourceRoot":"","sources":["../../../src/client/multisigAccountClient.ts"],"names":[],"mappings":";;;AAAA,sDAa8B;AAC9B,8CAG0B;AAC1B,+BAMc;AACd,4CAA2D;AAC3D,0FAAuG;AACvG,iDAA8D;AAwCvD,KAAK,UAAU,kCAAkC,CACtD,MAA0C;IAY1C,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,gBAAgB,EAAE,GACxC,uCAA2B,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAE5C,MAAM,MAAM,GAAG,IAAA,2CAA4B,EAAC;QAC1C,KAAK;QACL,gBAAgB;KACjB,CAAC,CAAC;IAEH,MAAM,OAAO,GAAG,MAAM,IAAA,0CAA4B,EAAC;QACjD,SAAS,EAAE,IAAA,aAAM,EAAC,MAAM,CAAC;QACzB,GAAG,MAAM;KACV,CAAC,CAAC;IAEH,OAAO,IAAA,2EAA4C,EAIjD;QACA,GAAG,MAAM;QACT,MAAM;QACN,OAAO;QACP,IAAI;QACJ,iBAAiB,EAAE,yCAA2B;KAC/C,CAAC;SACC,MAAM,CAAC,mCAAyB,CAAC;SACjC,MAAM,CAAC,mCAAqB,CAAC;SAC7B,MAAM,CAAC,kCAAoB,CAAC;SAC5B,MAAM,CAAC,iCAAmB,CAAC,CAAC;AACjC,CAAC;AAzCD,gFAyCC","sourcesContent":["import {\n  accountLoupeActions,\n  createMultisigModularAccount,\n  multisigPluginActions,\n  multisigSignatureMiddleware,\n  pluginManagerActions,\n  type AccountLoupeActions,\n  type CreateMultisigModularAccountParams,\n  type LightAccount,\n  type MultisigModularAccount,\n  type MultisigPluginActions,\n  type MultisigUserOperationContext,\n  type PluginManagerActions,\n} from \"@alchemy/aa-accounts\";\nimport {\n  smartAccountClientActions,\n  type SmartAccountSigner,\n} from \"@alchemy/aa-core\";\nimport {\n  custom,\n  type Chain,\n  type CustomTransport,\n  type HttpTransport,\n  type Transport,\n} from \"viem\";\nimport { AlchemyProviderConfigSchema } from \"../schema.js\";\nimport { createAlchemySmartAccountClientFromRpcClient } from \"./internal/smartAccountClientFromRpc.js\";\nimport { createAlchemyPublicRpcClient } from \"./rpcClient.js\";\nimport type {\n  AlchemySmartAccountClient,\n  AlchemySmartAccountClientConfig,\n} from \"./smartAccountClient\";\n\n// todo: this file seems somewhat duplicated with ./modularAccountClient.ts, but that file has some multi-owner specific fields. Is there a way to refactor these two to de-dupe?\n\nexport type AlchemyMultisigAccountClientConfig<\n  TSigner extends SmartAccountSigner = SmartAccountSigner\n> = Omit<\n  CreateMultisigModularAccountParams<HttpTransport, TSigner>,\n  \"transport\" | \"chain\"\n> &\n  Omit<\n    AlchemySmartAccountClientConfig<\n      Transport,\n      Chain,\n      LightAccount<TSigner>,\n      MultisigUserOperationContext\n    >,\n    \"account\"\n  >;\n\nexport function createMultisigAccountAlchemyClient<\n  TSigner extends SmartAccountSigner = SmartAccountSigner\n>(\n  params: AlchemyMultisigAccountClientConfig<TSigner>\n): Promise<\n  AlchemySmartAccountClient<\n    CustomTransport,\n    Chain | undefined,\n    MultisigModularAccount<TSigner>,\n    MultisigPluginActions<MultisigModularAccount<TSigner>> &\n      PluginManagerActions<MultisigModularAccount<TSigner>> &\n      AccountLoupeActions<MultisigModularAccount<TSigner>>,\n    MultisigUserOperationContext\n  >\n>;\n\nexport async function createMultisigAccountAlchemyClient(\n  config: AlchemyMultisigAccountClientConfig\n): Promise<\n  AlchemySmartAccountClient<\n    Transport,\n    Chain | undefined,\n    MultisigModularAccount<SmartAccountSigner>,\n    MultisigPluginActions<MultisigModularAccount<SmartAccountSigner>> &\n      PluginManagerActions<MultisigModularAccount<SmartAccountSigner>> &\n      AccountLoupeActions<MultisigModularAccount<SmartAccountSigner>>,\n    MultisigUserOperationContext\n  >\n> {\n  const { chain, opts, ...connectionConfig } =\n    AlchemyProviderConfigSchema.parse(config);\n\n  const client = createAlchemyPublicRpcClient({\n    chain,\n    connectionConfig,\n  });\n\n  const account = await createMultisigModularAccount({\n    transport: custom(client),\n    ...config,\n  });\n\n  return createAlchemySmartAccountClientFromRpcClient<\n    Chain | undefined,\n    MultisigModularAccount<SmartAccountSigner>,\n    MultisigUserOperationContext\n  >({\n    ...config,\n    client,\n    account,\n    opts,\n    signUserOperation: multisigSignatureMiddleware,\n  })\n    .extend(smartAccountClientActions)\n    .extend(multisigPluginActions)\n    .extend(pluginManagerActions)\n    .extend(accountLoupeActions);\n}\n"]}