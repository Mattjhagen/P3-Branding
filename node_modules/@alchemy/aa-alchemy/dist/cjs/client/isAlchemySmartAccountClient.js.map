{"version":3,"file":"isAlchemySmartAccountClient.js","sourceRoot":"","sources":["../../../src/client/isAlchemySmartAccountClient.ts"],"names":[],"mappings":";;;AAAA,8CAG0B;AAInB,MAAM,2BAA2B,GAAG,CAOzC,MAA4C,EACuB,EAAE;IAKrE,OAAO,IAAA,8BAAoB,EAAC,MAAM,CAAC,CAAC;AACtC,CAAC,CAAC;AAdW,QAAA,2BAA2B,+BActC","sourcesContent":["import {\n  isSmartAccountClient,\n  type SmartContractAccount,\n} from \"@alchemy/aa-core\";\nimport type { Chain, Client, Transport } from \"viem\";\nimport type { AlchemySmartAccountClient } from \"./smartAccountClient\";\n\nexport const isAlchemySmartAccountClient = <\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n>(\n  client: Client<TTransport, TChain, TAccount>\n): client is AlchemySmartAccountClient<TTransport, TChain, TAccount> => {\n  // TODO: the goal of this check is to make sure that the client supports certain RPC methods\n  // we should probably do this by checking the client's transport and configured URL, since alchemy\n  // clients have to be RPC clients. this is difficult to do though because the transport might\n  // point to a proxy url :/\n  return isSmartAccountClient(client);\n};\n"]}