import { type SmartContractAccount } from "@alchemy/aa-core";
import type { Chain, Client, Transport } from "viem";
export declare const isAlchemySmartAccountClient: <TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TAccount extends SmartContractAccount | undefined = SmartContractAccount | undefined>(client: Client<TTransport, TChain, TAccount>) => client is ((Client<TTransport, TChain, TAccount, [{
    Method: "eth_sendUserOperation";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateUserOperationGas";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`, (import("viem").RpcStateOverride | undefined)?];
    ReturnType: import("@alchemy/aa-core").UserOperationEstimateGasResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>;
}, {
    Method: "eth_getUserOperationReceipt";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationReceipt | null;
}, {
    Method: "eth_getUserOperationByHash";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>> | null;
}, {
    Method: "eth_supportedEntryPoints";
    Parameters: [];
    ReturnType: `0x${string}`[];
}, {
    Method: "web3_clientVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "web3_sha3";
    Parameters: [data: `0x${string}`];
    ReturnType: string;
}, {
    Method: "net_listening";
    Parameters?: undefined;
    ReturnType: boolean;
}, {
    Method: "net_peerCount";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "net_version";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blobBaseFee";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blockNumber";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_call";
    Parameters: [transaction: Partial<import("viem").RpcTransactionRequest>] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier, stateOverrideSet: import("viem").RpcStateOverride];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_chainId";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_coinbase";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateGas";
    Parameters: [transaction: import("viem").RpcTransactionRequest] | [transaction: import("viem").RpcTransactionRequest, block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_feeHistory";
    Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | import("viem").BlockTag, rewardPercentiles: number[] | undefined];
    ReturnType: import("viem").RpcFeeHistory;
}, {
    Method: "eth_gasPrice";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBalance";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockByHash";
    Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockTransactionCountByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockTransactionCountByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getCode";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getFilterChanges";
    Parameters: [filterId: `0x${string}`];
    ReturnType: `0x${string}`[] | import("viem").RpcLog[];
}, {
    Method: "eth_getFilterLogs";
    Parameters: [filterId: `0x${string}`];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getLogs";
    Parameters: [{
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    } & ({
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        blockHash?: undefined;
    } | {
        fromBlock?: undefined;
        toBlock?: undefined;
        blockHash?: `0x${string}` | undefined;
    })];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getProof";
    Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | import("viem").BlockTag];
    ReturnType: import("viem").RpcProof;
}, {
    Method: "eth_getStorageAt";
    Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionCount";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionReceipt";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransactionReceipt | null;
}, {
    Method: "eth_getUncleByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleCountByBlockHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getUncleCountByBlockNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_maxPriorityFeePerGas";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newBlockFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newFilter";
    Parameters: [filter: {
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    }];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newPendingTransactionFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_protocolVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "eth_sendRawTransaction";
    Parameters: [signedTransaction: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_uninstallFilter";
    Parameters: [filterId: `0x${string}`];
    ReturnType: boolean;
}, {
    Method: "alchemy_requestPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
    }];
    ReturnType: import("..").RequestPaymasterAndDataResponse;
}, {
    Method: "alchemy_requestGasAndPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
        dummySignature: `0x${string}`;
        overrides?: Partial<{}> | undefined;
    }];
    ReturnType: import("..").RequestGasAndPaymasterAndDataResponse;
}, {
    Method: "alchemy_simulateUserOperationAssetChanges";
    Parameters: import("..").SimulateUserOperationAssetChangesRequest;
    ReturnType: import("..").SimulateUserOperationAssetChangesResponse;
}, {
    Method: "rundler_maxPriorityFeePerGas";
    Parameters: [];
    ReturnType: `0x${string}`;
}], Record<string, unknown> & {
    buildUserOperation: (args: import("@alchemy/aa-core").BuildUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTx: (args: import("viem").SendTransactionParameters<TChain, TAccount>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTxs: (args: import("@alchemy/aa-core").BuildTransactionParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").BuildUserOperationFromTransactionsResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    checkGasSponsorshipEligibility: <TContext extends import("@alchemy/aa-core").UserOperationContext | undefined = import("@alchemy/aa-core").UserOperationContext | undefined>(args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, TContext>) => Promise<boolean>;
    signUserOperation: (args: import("@alchemy/aa-core").SignUserOperationParameters<TAccount, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationRequest<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    dropAndReplaceUserOperation: (args: import("@alchemy/aa-core").DropAndReplaceUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    sendTransaction: <TChainOverride extends Chain | undefined = undefined>(args: import("viem").SendTransactionParameters<TChain, TAccount, TChainOverride>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<`0x${string}`>;
    sendTransactions: (args: import("@alchemy/aa-core").SendTransactionsParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    sendUserOperation: (args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    waitForUserOperationTransaction: (args: import("@alchemy/aa-core").WaitForUserOperationTxParameters) => Promise<`0x${string}`>;
    upgradeAccount: (args: import("@alchemy/aa-core").UpgradeAccountParams<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    signMessage: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedData: <const TTypedData extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>) => Promise<`0x${string}`>;
    signMessageWith6492: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedDataWith6492: <const TTypedData_1 extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType_1 extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData_1, TPrimaryType_1, TAccount>) => Promise<`0x${string}`>;
} & (import("@alchemy/aa-core").IsUndefined<TAccount> extends false ? {
    getAddress: () => `0x${string}`;
} : {
    getAddress: (args: import("@alchemy/aa-core").GetAccountParameter<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>) => `0x${string}`;
}) & import("@alchemy/aa-core").BundlerActions & import("viem").PublicActions & import("..").AlchemySmartAccountClientActions<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>> extends infer T_6 ? { [K_2 in keyof T_6]: Client<TTransport, TChain, TAccount, [{
    Method: "eth_sendUserOperation";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateUserOperationGas";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`, (import("viem").RpcStateOverride | undefined)?];
    ReturnType: import("@alchemy/aa-core").UserOperationEstimateGasResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>;
}, {
    Method: "eth_getUserOperationReceipt";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationReceipt | null;
}, {
    Method: "eth_getUserOperationByHash";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>> | null;
}, {
    Method: "eth_supportedEntryPoints";
    Parameters: [];
    ReturnType: `0x${string}`[];
}, {
    Method: "web3_clientVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "web3_sha3";
    Parameters: [data: `0x${string}`];
    ReturnType: string;
}, {
    Method: "net_listening";
    Parameters?: undefined;
    ReturnType: boolean;
}, {
    Method: "net_peerCount";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "net_version";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blobBaseFee";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blockNumber";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_call";
    Parameters: [transaction: Partial<import("viem").RpcTransactionRequest>] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier, stateOverrideSet: import("viem").RpcStateOverride];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_chainId";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_coinbase";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateGas";
    Parameters: [transaction: import("viem").RpcTransactionRequest] | [transaction: import("viem").RpcTransactionRequest, block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_feeHistory";
    Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | import("viem").BlockTag, rewardPercentiles: number[] | undefined];
    ReturnType: import("viem").RpcFeeHistory;
}, {
    Method: "eth_gasPrice";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBalance";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockByHash";
    Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockTransactionCountByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockTransactionCountByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getCode";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getFilterChanges";
    Parameters: [filterId: `0x${string}`];
    ReturnType: `0x${string}`[] | import("viem").RpcLog[];
}, {
    Method: "eth_getFilterLogs";
    Parameters: [filterId: `0x${string}`];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getLogs";
    Parameters: [{
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    } & ({
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        blockHash?: undefined;
    } | {
        fromBlock?: undefined;
        toBlock?: undefined;
        blockHash?: `0x${string}` | undefined;
    })];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getProof";
    Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | import("viem").BlockTag];
    ReturnType: import("viem").RpcProof;
}, {
    Method: "eth_getStorageAt";
    Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionCount";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionReceipt";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransactionReceipt | null;
}, {
    Method: "eth_getUncleByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleCountByBlockHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getUncleCountByBlockNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_maxPriorityFeePerGas";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newBlockFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newFilter";
    Parameters: [filter: {
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    }];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newPendingTransactionFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_protocolVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "eth_sendRawTransaction";
    Parameters: [signedTransaction: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_uninstallFilter";
    Parameters: [filterId: `0x${string}`];
    ReturnType: boolean;
}, {
    Method: "alchemy_requestPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
    }];
    ReturnType: import("..").RequestPaymasterAndDataResponse;
}, {
    Method: "alchemy_requestGasAndPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
        dummySignature: `0x${string}`;
        overrides?: Partial<{}> | undefined;
    }];
    ReturnType: import("..").RequestGasAndPaymasterAndDataResponse;
}, {
    Method: "alchemy_simulateUserOperationAssetChanges";
    Parameters: import("..").SimulateUserOperationAssetChangesRequest;
    ReturnType: import("..").SimulateUserOperationAssetChangesResponse;
}, {
    Method: "rundler_maxPriorityFeePerGas";
    Parameters: [];
    ReturnType: `0x${string}`;
}], Record<string, unknown> & {
    buildUserOperation: (args: import("@alchemy/aa-core").BuildUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTx: (args: import("viem").SendTransactionParameters<TChain, TAccount>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTxs: (args: import("@alchemy/aa-core").BuildTransactionParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").BuildUserOperationFromTransactionsResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    checkGasSponsorshipEligibility: <TContext extends import("@alchemy/aa-core").UserOperationContext | undefined = import("@alchemy/aa-core").UserOperationContext | undefined>(args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, TContext>) => Promise<boolean>;
    signUserOperation: (args: import("@alchemy/aa-core").SignUserOperationParameters<TAccount, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationRequest<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    dropAndReplaceUserOperation: (args: import("@alchemy/aa-core").DropAndReplaceUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    sendTransaction: <TChainOverride extends Chain | undefined = undefined>(args: import("viem").SendTransactionParameters<TChain, TAccount, TChainOverride>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<`0x${string}`>;
    sendTransactions: (args: import("@alchemy/aa-core").SendTransactionsParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    sendUserOperation: (args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    waitForUserOperationTransaction: (args: import("@alchemy/aa-core").WaitForUserOperationTxParameters) => Promise<`0x${string}`>;
    upgradeAccount: (args: import("@alchemy/aa-core").UpgradeAccountParams<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    signMessage: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedData: <const TTypedData extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>) => Promise<`0x${string}`>;
    signMessageWith6492: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedDataWith6492: <const TTypedData_1 extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType_1 extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData_1, TPrimaryType_1, TAccount>) => Promise<`0x${string}`>;
} & (import("@alchemy/aa-core").IsUndefined<TAccount> extends false ? {
    getAddress: () => `0x${string}`;
} : {
    getAddress: (args: import("@alchemy/aa-core").GetAccountParameter<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>) => `0x${string}`;
}) & import("@alchemy/aa-core").BundlerActions & import("viem").PublicActions & import("..").AlchemySmartAccountClientActions<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>>[K_2]; } : never) extends infer T_4 ? { [K_1 in keyof T_4]: (Client<TTransport, TChain, TAccount, [{
    Method: "eth_sendUserOperation";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateUserOperationGas";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`, (import("viem").RpcStateOverride | undefined)?];
    ReturnType: import("@alchemy/aa-core").UserOperationEstimateGasResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>;
}, {
    Method: "eth_getUserOperationReceipt";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationReceipt | null;
}, {
    Method: "eth_getUserOperationByHash";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>> | null;
}, {
    Method: "eth_supportedEntryPoints";
    Parameters: [];
    ReturnType: `0x${string}`[];
}, {
    Method: "web3_clientVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "web3_sha3";
    Parameters: [data: `0x${string}`];
    ReturnType: string;
}, {
    Method: "net_listening";
    Parameters?: undefined;
    ReturnType: boolean;
}, {
    Method: "net_peerCount";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "net_version";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blobBaseFee";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blockNumber";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_call";
    Parameters: [transaction: Partial<import("viem").RpcTransactionRequest>] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier, stateOverrideSet: import("viem").RpcStateOverride];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_chainId";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_coinbase";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateGas";
    Parameters: [transaction: import("viem").RpcTransactionRequest] | [transaction: import("viem").RpcTransactionRequest, block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_feeHistory";
    Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | import("viem").BlockTag, rewardPercentiles: number[] | undefined];
    ReturnType: import("viem").RpcFeeHistory;
}, {
    Method: "eth_gasPrice";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBalance";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockByHash";
    Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockTransactionCountByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockTransactionCountByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getCode";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getFilterChanges";
    Parameters: [filterId: `0x${string}`];
    ReturnType: `0x${string}`[] | import("viem").RpcLog[];
}, {
    Method: "eth_getFilterLogs";
    Parameters: [filterId: `0x${string}`];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getLogs";
    Parameters: [{
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    } & ({
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        blockHash?: undefined;
    } | {
        fromBlock?: undefined;
        toBlock?: undefined;
        blockHash?: `0x${string}` | undefined;
    })];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getProof";
    Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | import("viem").BlockTag];
    ReturnType: import("viem").RpcProof;
}, {
    Method: "eth_getStorageAt";
    Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionCount";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionReceipt";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransactionReceipt | null;
}, {
    Method: "eth_getUncleByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleCountByBlockHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getUncleCountByBlockNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_maxPriorityFeePerGas";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newBlockFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newFilter";
    Parameters: [filter: {
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    }];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newPendingTransactionFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_protocolVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "eth_sendRawTransaction";
    Parameters: [signedTransaction: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_uninstallFilter";
    Parameters: [filterId: `0x${string}`];
    ReturnType: boolean;
}, {
    Method: "alchemy_requestPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
    }];
    ReturnType: import("..").RequestPaymasterAndDataResponse;
}, {
    Method: "alchemy_requestGasAndPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
        dummySignature: `0x${string}`;
        overrides?: Partial<{}> | undefined;
    }];
    ReturnType: import("..").RequestGasAndPaymasterAndDataResponse;
}, {
    Method: "alchemy_simulateUserOperationAssetChanges";
    Parameters: import("..").SimulateUserOperationAssetChangesRequest;
    ReturnType: import("..").SimulateUserOperationAssetChangesResponse;
}, {
    Method: "rundler_maxPriorityFeePerGas";
    Parameters: [];
    ReturnType: `0x${string}`;
}], Record<string, unknown> & {
    buildUserOperation: (args: import("@alchemy/aa-core").BuildUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTx: (args: import("viem").SendTransactionParameters<TChain, TAccount>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTxs: (args: import("@alchemy/aa-core").BuildTransactionParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").BuildUserOperationFromTransactionsResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    checkGasSponsorshipEligibility: <TContext extends import("@alchemy/aa-core").UserOperationContext | undefined = import("@alchemy/aa-core").UserOperationContext | undefined>(args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, TContext>) => Promise<boolean>;
    signUserOperation: (args: import("@alchemy/aa-core").SignUserOperationParameters<TAccount, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationRequest<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    dropAndReplaceUserOperation: (args: import("@alchemy/aa-core").DropAndReplaceUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    sendTransaction: <TChainOverride extends Chain | undefined = undefined>(args: import("viem").SendTransactionParameters<TChain, TAccount, TChainOverride>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<`0x${string}`>;
    sendTransactions: (args: import("@alchemy/aa-core").SendTransactionsParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    sendUserOperation: (args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    waitForUserOperationTransaction: (args: import("@alchemy/aa-core").WaitForUserOperationTxParameters) => Promise<`0x${string}`>;
    upgradeAccount: (args: import("@alchemy/aa-core").UpgradeAccountParams<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    signMessage: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedData: <const TTypedData extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>) => Promise<`0x${string}`>;
    signMessageWith6492: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedDataWith6492: <const TTypedData_1 extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType_1 extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData_1, TPrimaryType_1, TAccount>) => Promise<`0x${string}`>;
} & (import("@alchemy/aa-core").IsUndefined<TAccount> extends false ? {
    getAddress: () => `0x${string}`;
} : {
    getAddress: (args: import("@alchemy/aa-core").GetAccountParameter<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>) => `0x${string}`;
}) & import("@alchemy/aa-core").BundlerActions & import("viem").PublicActions & import("..").AlchemySmartAccountClientActions<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>> extends infer T_5 ? { [K_2 in keyof T_5]: Client<TTransport, TChain, TAccount, [{
    Method: "eth_sendUserOperation";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateUserOperationGas";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`, (import("viem").RpcStateOverride | undefined)?];
    ReturnType: import("@alchemy/aa-core").UserOperationEstimateGasResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>;
}, {
    Method: "eth_getUserOperationReceipt";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationReceipt | null;
}, {
    Method: "eth_getUserOperationByHash";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>> | null;
}, {
    Method: "eth_supportedEntryPoints";
    Parameters: [];
    ReturnType: `0x${string}`[];
}, {
    Method: "web3_clientVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "web3_sha3";
    Parameters: [data: `0x${string}`];
    ReturnType: string;
}, {
    Method: "net_listening";
    Parameters?: undefined;
    ReturnType: boolean;
}, {
    Method: "net_peerCount";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "net_version";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blobBaseFee";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blockNumber";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_call";
    Parameters: [transaction: Partial<import("viem").RpcTransactionRequest>] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier, stateOverrideSet: import("viem").RpcStateOverride];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_chainId";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_coinbase";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateGas";
    Parameters: [transaction: import("viem").RpcTransactionRequest] | [transaction: import("viem").RpcTransactionRequest, block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_feeHistory";
    Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | import("viem").BlockTag, rewardPercentiles: number[] | undefined];
    ReturnType: import("viem").RpcFeeHistory;
}, {
    Method: "eth_gasPrice";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBalance";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockByHash";
    Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockTransactionCountByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockTransactionCountByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getCode";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getFilterChanges";
    Parameters: [filterId: `0x${string}`];
    ReturnType: `0x${string}`[] | import("viem").RpcLog[];
}, {
    Method: "eth_getFilterLogs";
    Parameters: [filterId: `0x${string}`];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getLogs";
    Parameters: [{
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    } & ({
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        blockHash?: undefined;
    } | {
        fromBlock?: undefined;
        toBlock?: undefined;
        blockHash?: `0x${string}` | undefined;
    })];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getProof";
    Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | import("viem").BlockTag];
    ReturnType: import("viem").RpcProof;
}, {
    Method: "eth_getStorageAt";
    Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionCount";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionReceipt";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransactionReceipt | null;
}, {
    Method: "eth_getUncleByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleCountByBlockHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getUncleCountByBlockNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_maxPriorityFeePerGas";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newBlockFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newFilter";
    Parameters: [filter: {
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    }];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newPendingTransactionFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_protocolVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "eth_sendRawTransaction";
    Parameters: [signedTransaction: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_uninstallFilter";
    Parameters: [filterId: `0x${string}`];
    ReturnType: boolean;
}, {
    Method: "alchemy_requestPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
    }];
    ReturnType: import("..").RequestPaymasterAndDataResponse;
}, {
    Method: "alchemy_requestGasAndPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
        dummySignature: `0x${string}`;
        overrides?: Partial<{}> | undefined;
    }];
    ReturnType: import("..").RequestGasAndPaymasterAndDataResponse;
}, {
    Method: "alchemy_simulateUserOperationAssetChanges";
    Parameters: import("..").SimulateUserOperationAssetChangesRequest;
    ReturnType: import("..").SimulateUserOperationAssetChangesResponse;
}, {
    Method: "rundler_maxPriorityFeePerGas";
    Parameters: [];
    ReturnType: `0x${string}`;
}], Record<string, unknown> & {
    buildUserOperation: (args: import("@alchemy/aa-core").BuildUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTx: (args: import("viem").SendTransactionParameters<TChain, TAccount>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTxs: (args: import("@alchemy/aa-core").BuildTransactionParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").BuildUserOperationFromTransactionsResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    checkGasSponsorshipEligibility: <TContext extends import("@alchemy/aa-core").UserOperationContext | undefined = import("@alchemy/aa-core").UserOperationContext | undefined>(args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, TContext>) => Promise<boolean>;
    signUserOperation: (args: import("@alchemy/aa-core").SignUserOperationParameters<TAccount, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationRequest<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    dropAndReplaceUserOperation: (args: import("@alchemy/aa-core").DropAndReplaceUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    sendTransaction: <TChainOverride extends Chain | undefined = undefined>(args: import("viem").SendTransactionParameters<TChain, TAccount, TChainOverride>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<`0x${string}`>;
    sendTransactions: (args: import("@alchemy/aa-core").SendTransactionsParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    sendUserOperation: (args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    waitForUserOperationTransaction: (args: import("@alchemy/aa-core").WaitForUserOperationTxParameters) => Promise<`0x${string}`>;
    upgradeAccount: (args: import("@alchemy/aa-core").UpgradeAccountParams<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    signMessage: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedData: <const TTypedData extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>) => Promise<`0x${string}`>;
    signMessageWith6492: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedDataWith6492: <const TTypedData_1 extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType_1 extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData_1, TPrimaryType_1, TAccount>) => Promise<`0x${string}`>;
} & (import("@alchemy/aa-core").IsUndefined<TAccount> extends false ? {
    getAddress: () => `0x${string}`;
} : {
    getAddress: (args: import("@alchemy/aa-core").GetAccountParameter<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>) => `0x${string}`;
}) & import("@alchemy/aa-core").BundlerActions & import("viem").PublicActions & import("..").AlchemySmartAccountClientActions<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>>[K_2]; } : never)[K_1]; } : never) extends infer T ? { [K in keyof T]: ((Client<TTransport, TChain, TAccount, [{
    Method: "eth_sendUserOperation";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateUserOperationGas";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`, (import("viem").RpcStateOverride | undefined)?];
    ReturnType: import("@alchemy/aa-core").UserOperationEstimateGasResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>;
}, {
    Method: "eth_getUserOperationReceipt";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationReceipt | null;
}, {
    Method: "eth_getUserOperationByHash";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>> | null;
}, {
    Method: "eth_supportedEntryPoints";
    Parameters: [];
    ReturnType: `0x${string}`[];
}, {
    Method: "web3_clientVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "web3_sha3";
    Parameters: [data: `0x${string}`];
    ReturnType: string;
}, {
    Method: "net_listening";
    Parameters?: undefined;
    ReturnType: boolean;
}, {
    Method: "net_peerCount";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "net_version";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blobBaseFee";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blockNumber";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_call";
    Parameters: [transaction: Partial<import("viem").RpcTransactionRequest>] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier, stateOverrideSet: import("viem").RpcStateOverride];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_chainId";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_coinbase";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateGas";
    Parameters: [transaction: import("viem").RpcTransactionRequest] | [transaction: import("viem").RpcTransactionRequest, block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_feeHistory";
    Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | import("viem").BlockTag, rewardPercentiles: number[] | undefined];
    ReturnType: import("viem").RpcFeeHistory;
}, {
    Method: "eth_gasPrice";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBalance";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockByHash";
    Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockTransactionCountByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockTransactionCountByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getCode";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getFilterChanges";
    Parameters: [filterId: `0x${string}`];
    ReturnType: `0x${string}`[] | import("viem").RpcLog[];
}, {
    Method: "eth_getFilterLogs";
    Parameters: [filterId: `0x${string}`];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getLogs";
    Parameters: [{
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    } & ({
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        blockHash?: undefined;
    } | {
        fromBlock?: undefined;
        toBlock?: undefined;
        blockHash?: `0x${string}` | undefined;
    })];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getProof";
    Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | import("viem").BlockTag];
    ReturnType: import("viem").RpcProof;
}, {
    Method: "eth_getStorageAt";
    Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionCount";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionReceipt";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransactionReceipt | null;
}, {
    Method: "eth_getUncleByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleCountByBlockHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getUncleCountByBlockNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_maxPriorityFeePerGas";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newBlockFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newFilter";
    Parameters: [filter: {
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    }];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newPendingTransactionFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_protocolVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "eth_sendRawTransaction";
    Parameters: [signedTransaction: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_uninstallFilter";
    Parameters: [filterId: `0x${string}`];
    ReturnType: boolean;
}, {
    Method: "alchemy_requestPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
    }];
    ReturnType: import("..").RequestPaymasterAndDataResponse;
}, {
    Method: "alchemy_requestGasAndPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
        dummySignature: `0x${string}`;
        overrides?: Partial<{}> | undefined;
    }];
    ReturnType: import("..").RequestGasAndPaymasterAndDataResponse;
}, {
    Method: "alchemy_simulateUserOperationAssetChanges";
    Parameters: import("..").SimulateUserOperationAssetChangesRequest;
    ReturnType: import("..").SimulateUserOperationAssetChangesResponse;
}, {
    Method: "rundler_maxPriorityFeePerGas";
    Parameters: [];
    ReturnType: `0x${string}`;
}], Record<string, unknown> & {
    buildUserOperation: (args: import("@alchemy/aa-core").BuildUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTx: (args: import("viem").SendTransactionParameters<TChain, TAccount>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTxs: (args: import("@alchemy/aa-core").BuildTransactionParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").BuildUserOperationFromTransactionsResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    checkGasSponsorshipEligibility: <TContext extends import("@alchemy/aa-core").UserOperationContext | undefined = import("@alchemy/aa-core").UserOperationContext | undefined>(args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, TContext>) => Promise<boolean>;
    signUserOperation: (args: import("@alchemy/aa-core").SignUserOperationParameters<TAccount, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationRequest<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    dropAndReplaceUserOperation: (args: import("@alchemy/aa-core").DropAndReplaceUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    sendTransaction: <TChainOverride extends Chain | undefined = undefined>(args: import("viem").SendTransactionParameters<TChain, TAccount, TChainOverride>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<`0x${string}`>;
    sendTransactions: (args: import("@alchemy/aa-core").SendTransactionsParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    sendUserOperation: (args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    waitForUserOperationTransaction: (args: import("@alchemy/aa-core").WaitForUserOperationTxParameters) => Promise<`0x${string}`>;
    upgradeAccount: (args: import("@alchemy/aa-core").UpgradeAccountParams<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    signMessage: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedData: <const TTypedData extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>) => Promise<`0x${string}`>;
    signMessageWith6492: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedDataWith6492: <const TTypedData_1 extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType_1 extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData_1, TPrimaryType_1, TAccount>) => Promise<`0x${string}`>;
} & (import("@alchemy/aa-core").IsUndefined<TAccount> extends false ? {
    getAddress: () => `0x${string}`;
} : {
    getAddress: (args: import("@alchemy/aa-core").GetAccountParameter<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>) => `0x${string}`;
}) & import("@alchemy/aa-core").BundlerActions & import("viem").PublicActions & import("..").AlchemySmartAccountClientActions<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>> extends infer T_3 ? { [K_2 in keyof T_3]: Client<TTransport, TChain, TAccount, [{
    Method: "eth_sendUserOperation";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateUserOperationGas";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`, (import("viem").RpcStateOverride | undefined)?];
    ReturnType: import("@alchemy/aa-core").UserOperationEstimateGasResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>;
}, {
    Method: "eth_getUserOperationReceipt";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationReceipt | null;
}, {
    Method: "eth_getUserOperationByHash";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>> | null;
}, {
    Method: "eth_supportedEntryPoints";
    Parameters: [];
    ReturnType: `0x${string}`[];
}, {
    Method: "web3_clientVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "web3_sha3";
    Parameters: [data: `0x${string}`];
    ReturnType: string;
}, {
    Method: "net_listening";
    Parameters?: undefined;
    ReturnType: boolean;
}, {
    Method: "net_peerCount";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "net_version";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blobBaseFee";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blockNumber";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_call";
    Parameters: [transaction: Partial<import("viem").RpcTransactionRequest>] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier, stateOverrideSet: import("viem").RpcStateOverride];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_chainId";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_coinbase";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateGas";
    Parameters: [transaction: import("viem").RpcTransactionRequest] | [transaction: import("viem").RpcTransactionRequest, block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_feeHistory";
    Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | import("viem").BlockTag, rewardPercentiles: number[] | undefined];
    ReturnType: import("viem").RpcFeeHistory;
}, {
    Method: "eth_gasPrice";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBalance";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockByHash";
    Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockTransactionCountByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockTransactionCountByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getCode";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getFilterChanges";
    Parameters: [filterId: `0x${string}`];
    ReturnType: `0x${string}`[] | import("viem").RpcLog[];
}, {
    Method: "eth_getFilterLogs";
    Parameters: [filterId: `0x${string}`];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getLogs";
    Parameters: [{
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    } & ({
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        blockHash?: undefined;
    } | {
        fromBlock?: undefined;
        toBlock?: undefined;
        blockHash?: `0x${string}` | undefined;
    })];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getProof";
    Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | import("viem").BlockTag];
    ReturnType: import("viem").RpcProof;
}, {
    Method: "eth_getStorageAt";
    Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionCount";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionReceipt";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransactionReceipt | null;
}, {
    Method: "eth_getUncleByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleCountByBlockHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getUncleCountByBlockNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_maxPriorityFeePerGas";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newBlockFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newFilter";
    Parameters: [filter: {
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    }];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newPendingTransactionFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_protocolVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "eth_sendRawTransaction";
    Parameters: [signedTransaction: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_uninstallFilter";
    Parameters: [filterId: `0x${string}`];
    ReturnType: boolean;
}, {
    Method: "alchemy_requestPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
    }];
    ReturnType: import("..").RequestPaymasterAndDataResponse;
}, {
    Method: "alchemy_requestGasAndPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
        dummySignature: `0x${string}`;
        overrides?: Partial<{}> | undefined;
    }];
    ReturnType: import("..").RequestGasAndPaymasterAndDataResponse;
}, {
    Method: "alchemy_simulateUserOperationAssetChanges";
    Parameters: import("..").SimulateUserOperationAssetChangesRequest;
    ReturnType: import("..").SimulateUserOperationAssetChangesResponse;
}, {
    Method: "rundler_maxPriorityFeePerGas";
    Parameters: [];
    ReturnType: `0x${string}`;
}], Record<string, unknown> & {
    buildUserOperation: (args: import("@alchemy/aa-core").BuildUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTx: (args: import("viem").SendTransactionParameters<TChain, TAccount>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTxs: (args: import("@alchemy/aa-core").BuildTransactionParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").BuildUserOperationFromTransactionsResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    checkGasSponsorshipEligibility: <TContext extends import("@alchemy/aa-core").UserOperationContext | undefined = import("@alchemy/aa-core").UserOperationContext | undefined>(args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, TContext>) => Promise<boolean>;
    signUserOperation: (args: import("@alchemy/aa-core").SignUserOperationParameters<TAccount, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationRequest<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    dropAndReplaceUserOperation: (args: import("@alchemy/aa-core").DropAndReplaceUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    sendTransaction: <TChainOverride extends Chain | undefined = undefined>(args: import("viem").SendTransactionParameters<TChain, TAccount, TChainOverride>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<`0x${string}`>;
    sendTransactions: (args: import("@alchemy/aa-core").SendTransactionsParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    sendUserOperation: (args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    waitForUserOperationTransaction: (args: import("@alchemy/aa-core").WaitForUserOperationTxParameters) => Promise<`0x${string}`>;
    upgradeAccount: (args: import("@alchemy/aa-core").UpgradeAccountParams<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    signMessage: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedData: <const TTypedData extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>) => Promise<`0x${string}`>;
    signMessageWith6492: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedDataWith6492: <const TTypedData_1 extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType_1 extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData_1, TPrimaryType_1, TAccount>) => Promise<`0x${string}`>;
} & (import("@alchemy/aa-core").IsUndefined<TAccount> extends false ? {
    getAddress: () => `0x${string}`;
} : {
    getAddress: (args: import("@alchemy/aa-core").GetAccountParameter<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>) => `0x${string}`;
}) & import("@alchemy/aa-core").BundlerActions & import("viem").PublicActions & import("..").AlchemySmartAccountClientActions<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>>[K_2]; } : never) extends infer T_1 ? { [K_1 in keyof T_1]: (Client<TTransport, TChain, TAccount, [{
    Method: "eth_sendUserOperation";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateUserOperationGas";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`, (import("viem").RpcStateOverride | undefined)?];
    ReturnType: import("@alchemy/aa-core").UserOperationEstimateGasResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>;
}, {
    Method: "eth_getUserOperationReceipt";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationReceipt | null;
}, {
    Method: "eth_getUserOperationByHash";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>> | null;
}, {
    Method: "eth_supportedEntryPoints";
    Parameters: [];
    ReturnType: `0x${string}`[];
}, {
    Method: "web3_clientVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "web3_sha3";
    Parameters: [data: `0x${string}`];
    ReturnType: string;
}, {
    Method: "net_listening";
    Parameters?: undefined;
    ReturnType: boolean;
}, {
    Method: "net_peerCount";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "net_version";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blobBaseFee";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blockNumber";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_call";
    Parameters: [transaction: Partial<import("viem").RpcTransactionRequest>] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier, stateOverrideSet: import("viem").RpcStateOverride];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_chainId";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_coinbase";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateGas";
    Parameters: [transaction: import("viem").RpcTransactionRequest] | [transaction: import("viem").RpcTransactionRequest, block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_feeHistory";
    Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | import("viem").BlockTag, rewardPercentiles: number[] | undefined];
    ReturnType: import("viem").RpcFeeHistory;
}, {
    Method: "eth_gasPrice";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBalance";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockByHash";
    Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockTransactionCountByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockTransactionCountByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getCode";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getFilterChanges";
    Parameters: [filterId: `0x${string}`];
    ReturnType: `0x${string}`[] | import("viem").RpcLog[];
}, {
    Method: "eth_getFilterLogs";
    Parameters: [filterId: `0x${string}`];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getLogs";
    Parameters: [{
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    } & ({
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        blockHash?: undefined;
    } | {
        fromBlock?: undefined;
        toBlock?: undefined;
        blockHash?: `0x${string}` | undefined;
    })];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getProof";
    Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | import("viem").BlockTag];
    ReturnType: import("viem").RpcProof;
}, {
    Method: "eth_getStorageAt";
    Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionCount";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionReceipt";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransactionReceipt | null;
}, {
    Method: "eth_getUncleByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleCountByBlockHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getUncleCountByBlockNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_maxPriorityFeePerGas";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newBlockFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newFilter";
    Parameters: [filter: {
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    }];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newPendingTransactionFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_protocolVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "eth_sendRawTransaction";
    Parameters: [signedTransaction: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_uninstallFilter";
    Parameters: [filterId: `0x${string}`];
    ReturnType: boolean;
}, {
    Method: "alchemy_requestPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
    }];
    ReturnType: import("..").RequestPaymasterAndDataResponse;
}, {
    Method: "alchemy_requestGasAndPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
        dummySignature: `0x${string}`;
        overrides?: Partial<{}> | undefined;
    }];
    ReturnType: import("..").RequestGasAndPaymasterAndDataResponse;
}, {
    Method: "alchemy_simulateUserOperationAssetChanges";
    Parameters: import("..").SimulateUserOperationAssetChangesRequest;
    ReturnType: import("..").SimulateUserOperationAssetChangesResponse;
}, {
    Method: "rundler_maxPriorityFeePerGas";
    Parameters: [];
    ReturnType: `0x${string}`;
}], Record<string, unknown> & {
    buildUserOperation: (args: import("@alchemy/aa-core").BuildUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTx: (args: import("viem").SendTransactionParameters<TChain, TAccount>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTxs: (args: import("@alchemy/aa-core").BuildTransactionParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").BuildUserOperationFromTransactionsResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    checkGasSponsorshipEligibility: <TContext extends import("@alchemy/aa-core").UserOperationContext | undefined = import("@alchemy/aa-core").UserOperationContext | undefined>(args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, TContext>) => Promise<boolean>;
    signUserOperation: (args: import("@alchemy/aa-core").SignUserOperationParameters<TAccount, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationRequest<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    dropAndReplaceUserOperation: (args: import("@alchemy/aa-core").DropAndReplaceUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    sendTransaction: <TChainOverride extends Chain | undefined = undefined>(args: import("viem").SendTransactionParameters<TChain, TAccount, TChainOverride>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<`0x${string}`>;
    sendTransactions: (args: import("@alchemy/aa-core").SendTransactionsParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    sendUserOperation: (args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    waitForUserOperationTransaction: (args: import("@alchemy/aa-core").WaitForUserOperationTxParameters) => Promise<`0x${string}`>;
    upgradeAccount: (args: import("@alchemy/aa-core").UpgradeAccountParams<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    signMessage: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedData: <const TTypedData extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>) => Promise<`0x${string}`>;
    signMessageWith6492: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedDataWith6492: <const TTypedData_1 extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType_1 extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData_1, TPrimaryType_1, TAccount>) => Promise<`0x${string}`>;
} & (import("@alchemy/aa-core").IsUndefined<TAccount> extends false ? {
    getAddress: () => `0x${string}`;
} : {
    getAddress: (args: import("@alchemy/aa-core").GetAccountParameter<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>) => `0x${string}`;
}) & import("@alchemy/aa-core").BundlerActions & import("viem").PublicActions & import("..").AlchemySmartAccountClientActions<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>> extends infer T_2 ? { [K_2 in keyof T_2]: Client<TTransport, TChain, TAccount, [{
    Method: "eth_sendUserOperation";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateUserOperationGas";
    Parameters: [import("@alchemy/aa-core").UserOperationRequest, `0x${string}`, (import("viem").RpcStateOverride | undefined)?];
    ReturnType: import("@alchemy/aa-core").UserOperationEstimateGasResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>;
}, {
    Method: "eth_getUserOperationReceipt";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationReceipt | null;
}, {
    Method: "eth_getUserOperationByHash";
    Parameters: [`0x${string}`];
    ReturnType: import("@alchemy/aa-core").UserOperationResponse<keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>> | null;
}, {
    Method: "eth_supportedEntryPoints";
    Parameters: [];
    ReturnType: `0x${string}`[];
}, {
    Method: "web3_clientVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "web3_sha3";
    Parameters: [data: `0x${string}`];
    ReturnType: string;
}, {
    Method: "net_listening";
    Parameters?: undefined;
    ReturnType: boolean;
}, {
    Method: "net_peerCount";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "net_version";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blobBaseFee";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_blockNumber";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_call";
    Parameters: [transaction: Partial<import("viem").RpcTransactionRequest>] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier] | [transaction: Partial<import("viem").RpcTransactionRequest>, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier, stateOverrideSet: import("viem").RpcStateOverride];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_chainId";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_coinbase";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_estimateGas";
    Parameters: [transaction: import("viem").RpcTransactionRequest] | [transaction: import("viem").RpcTransactionRequest, block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_feeHistory";
    Parameters: [blockCount: `0x${string}`, newestBlock: `0x${string}` | import("viem").BlockTag, rewardPercentiles: number[] | undefined];
    ReturnType: import("viem").RpcFeeHistory;
}, {
    Method: "eth_gasPrice";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBalance";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockByHash";
    Parameters: [hash: `0x${string}`, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, includeTransactionObjects: boolean];
    ReturnType: import("viem").RpcBlock | null;
}, {
    Method: "eth_getBlockTransactionCountByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getBlockTransactionCountByNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getCode";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getFilterChanges";
    Parameters: [filterId: `0x${string}`];
    ReturnType: `0x${string}`[] | import("viem").RpcLog[];
}, {
    Method: "eth_getFilterLogs";
    Parameters: [filterId: `0x${string}`];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getLogs";
    Parameters: [{
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    } & ({
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        blockHash?: undefined;
    } | {
        fromBlock?: undefined;
        toBlock?: undefined;
        blockHash?: `0x${string}` | undefined;
    })];
    ReturnType: import("viem").RpcLog[];
}, {
    Method: "eth_getProof";
    Parameters: [address: `0x${string}`, storageKeys: `0x${string}`[], block: `0x${string}` | import("viem").BlockTag];
    ReturnType: import("viem").RpcProof;
}, {
    Method: "eth_getStorageAt";
    Parameters: [address: `0x${string}`, index: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionByHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransaction | null;
}, {
    Method: "eth_getTransactionCount";
    Parameters: [address: `0x${string}`, block: `0x${string}` | import("viem").BlockTag | import("viem").RpcBlockIdentifier];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getTransactionReceipt";
    Parameters: [hash: `0x${string}`];
    ReturnType: import("viem").RpcTransactionReceipt | null;
}, {
    Method: "eth_getUncleByBlockHashAndIndex";
    Parameters: [hash: `0x${string}`, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleByBlockNumberAndIndex";
    Parameters: [block: `0x${string}` | import("viem").BlockTag, index: `0x${string}`];
    ReturnType: import("viem").RpcUncle | null;
}, {
    Method: "eth_getUncleCountByBlockHash";
    Parameters: [hash: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_getUncleCountByBlockNumber";
    Parameters: [block: `0x${string}` | import("viem").BlockTag];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_maxPriorityFeePerGas";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newBlockFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newFilter";
    Parameters: [filter: {
        fromBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        toBlock?: `0x${string}` | import("viem").BlockTag | undefined;
        address?: `0x${string}` | `0x${string}`[] | undefined;
        topics?: import("viem").LogTopic[] | undefined;
    }];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_newPendingTransactionFilter";
    Parameters?: undefined;
    ReturnType: `0x${string}`;
}, {
    Method: "eth_protocolVersion";
    Parameters?: undefined;
    ReturnType: string;
}, {
    Method: "eth_sendRawTransaction";
    Parameters: [signedTransaction: `0x${string}`];
    ReturnType: `0x${string}`;
}, {
    Method: "eth_uninstallFilter";
    Parameters: [filterId: `0x${string}`];
    ReturnType: boolean;
}, {
    Method: "alchemy_requestPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
    }];
    ReturnType: import("..").RequestPaymasterAndDataResponse;
}, {
    Method: "alchemy_requestGasAndPaymasterAndData";
    Parameters: [{
        policyId: string;
        entryPoint: `0x${string}`;
        userOperation: import("@alchemy/aa-core").UserOperationRequest;
        dummySignature: `0x${string}`;
        overrides?: Partial<{}> | undefined;
    }];
    ReturnType: import("..").RequestGasAndPaymasterAndDataResponse;
}, {
    Method: "alchemy_simulateUserOperationAssetChanges";
    Parameters: import("..").SimulateUserOperationAssetChangesRequest;
    ReturnType: import("..").SimulateUserOperationAssetChangesResponse;
}, {
    Method: "rundler_maxPriorityFeePerGas";
    Parameters: [];
    ReturnType: `0x${string}`;
}], Record<string, unknown> & {
    buildUserOperation: (args: import("@alchemy/aa-core").BuildUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTx: (args: import("viem").SendTransactionParameters<TChain, TAccount>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    buildUserOperationFromTxs: (args: import("@alchemy/aa-core").BuildTransactionParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").BuildUserOperationFromTransactionsResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    checkGasSponsorshipEligibility: <TContext extends import("@alchemy/aa-core").UserOperationContext | undefined = import("@alchemy/aa-core").UserOperationContext | undefined>(args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, TContext>) => Promise<boolean>;
    signUserOperation: (args: import("@alchemy/aa-core").SignUserOperationParameters<TAccount, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").UserOperationRequest<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    dropAndReplaceUserOperation: (args: import("@alchemy/aa-core").DropAndReplaceUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    sendTransaction: <TChainOverride extends Chain | undefined = undefined>(args: import("viem").SendTransactionParameters<TChain, TAccount, TChainOverride>, overrides?: Partial<{
        callGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["callGasLimit"];
        maxFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxFeePerGas"];
        maxPriorityFeePerGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["maxPriorityFeePerGas"];
        preVerificationGas: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["preVerificationGas"];
        verificationGasLimit: {
            multiplier: number;
        } | import("@alchemy/aa-core").UserOperationStruct<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>["verificationGasLimit"];
        nonceKey: bigint;
        stateOverride: import("viem").StateOverride;
    } & import("@alchemy/aa-core").UserOperationPaymasterOverrides<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>> | undefined, context?: import("@alchemy/aa-core").UserOperationContext | undefined) => Promise<`0x${string}`>;
    sendTransactions: (args: import("@alchemy/aa-core").SendTransactionsParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    sendUserOperation: (args: import("@alchemy/aa-core").SendUserOperationParameters<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined, import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>) => Promise<import("@alchemy/aa-core").SendUserOperationResult<import("@alchemy/aa-core").GetEntryPointFromAccount<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>>>;
    waitForUserOperationTransaction: (args: import("@alchemy/aa-core").WaitForUserOperationTxParameters) => Promise<`0x${string}`>;
    upgradeAccount: (args: import("@alchemy/aa-core").UpgradeAccountParams<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>) => Promise<`0x${string}`>;
    signMessage: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedData: <const TTypedData extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>) => Promise<`0x${string}`>;
    signMessageWith6492: (args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signMessage").SignMessageParameters<TAccount>) => Promise<`0x${string}`>;
    signTypedDataWith6492: <const TTypedData_1 extends {
        [x: string]: readonly import("viem").TypedDataParameter[];
        [x: `string[${string}]`]: undefined;
        [x: `function[${string}]`]: undefined;
        [x: `address[${string}]`]: undefined;
        [x: `bool[${string}]`]: undefined;
        [x: `bytes[${string}]`]: undefined;
        [x: `bytes2[${string}]`]: undefined;
        [x: `bytes3[${string}]`]: undefined;
        [x: `bytes1[${string}]`]: undefined;
        [x: `bytes4[${string}]`]: undefined;
        [x: `bytes5[${string}]`]: undefined;
        [x: `bytes32[${string}]`]: undefined;
        [x: `bytes31[${string}]`]: undefined;
        [x: `bytes30[${string}]`]: undefined;
        [x: `bytes29[${string}]`]: undefined;
        [x: `bytes28[${string}]`]: undefined;
        [x: `bytes27[${string}]`]: undefined;
        [x: `bytes26[${string}]`]: undefined;
        [x: `bytes25[${string}]`]: undefined;
        [x: `bytes24[${string}]`]: undefined;
        [x: `bytes23[${string}]`]: undefined;
        [x: `bytes22[${string}]`]: undefined;
        [x: `bytes21[${string}]`]: undefined;
        [x: `bytes20[${string}]`]: undefined;
        [x: `bytes19[${string}]`]: undefined;
        [x: `bytes18[${string}]`]: undefined;
        [x: `bytes17[${string}]`]: undefined;
        [x: `bytes16[${string}]`]: undefined;
        [x: `bytes15[${string}]`]: undefined;
        [x: `bytes14[${string}]`]: undefined;
        [x: `bytes13[${string}]`]: undefined;
        [x: `bytes12[${string}]`]: undefined;
        [x: `bytes11[${string}]`]: undefined;
        [x: `bytes10[${string}]`]: undefined;
        [x: `bytes9[${string}]`]: undefined;
        [x: `bytes8[${string}]`]: undefined;
        [x: `bytes7[${string}]`]: undefined;
        [x: `bytes6[${string}]`]: undefined;
        [x: `int[${string}]`]: undefined;
        [x: `int40[${string}]`]: undefined;
        [x: `int32[${string}]`]: undefined;
        [x: `int24[${string}]`]: undefined;
        [x: `int16[${string}]`]: undefined;
        [x: `int8[${string}]`]: undefined;
        [x: `int48[${string}]`]: undefined;
        [x: `int56[${string}]`]: undefined;
        [x: `int64[${string}]`]: undefined;
        [x: `int72[${string}]`]: undefined;
        [x: `int80[${string}]`]: undefined;
        [x: `int88[${string}]`]: undefined;
        [x: `int96[${string}]`]: undefined;
        [x: `int104[${string}]`]: undefined;
        [x: `int112[${string}]`]: undefined;
        [x: `int120[${string}]`]: undefined;
        [x: `int128[${string}]`]: undefined;
        [x: `int136[${string}]`]: undefined;
        [x: `int144[${string}]`]: undefined;
        [x: `int152[${string}]`]: undefined;
        [x: `int160[${string}]`]: undefined;
        [x: `int168[${string}]`]: undefined;
        [x: `int176[${string}]`]: undefined;
        [x: `int184[${string}]`]: undefined;
        [x: `int192[${string}]`]: undefined;
        [x: `int200[${string}]`]: undefined;
        [x: `int208[${string}]`]: undefined;
        [x: `int216[${string}]`]: undefined;
        [x: `int224[${string}]`]: undefined;
        [x: `int232[${string}]`]: undefined;
        [x: `int240[${string}]`]: undefined;
        [x: `int248[${string}]`]: undefined;
        [x: `int256[${string}]`]: undefined;
        [x: `uint[${string}]`]: undefined;
        [x: `uint40[${string}]`]: undefined;
        [x: `uint32[${string}]`]: undefined;
        [x: `uint24[${string}]`]: undefined;
        [x: `uint16[${string}]`]: undefined;
        [x: `uint8[${string}]`]: undefined;
        [x: `uint48[${string}]`]: undefined;
        [x: `uint56[${string}]`]: undefined;
        [x: `uint64[${string}]`]: undefined;
        [x: `uint72[${string}]`]: undefined;
        [x: `uint80[${string}]`]: undefined;
        [x: `uint88[${string}]`]: undefined;
        [x: `uint96[${string}]`]: undefined;
        [x: `uint104[${string}]`]: undefined;
        [x: `uint112[${string}]`]: undefined;
        [x: `uint120[${string}]`]: undefined;
        [x: `uint128[${string}]`]: undefined;
        [x: `uint136[${string}]`]: undefined;
        [x: `uint144[${string}]`]: undefined;
        [x: `uint152[${string}]`]: undefined;
        [x: `uint160[${string}]`]: undefined;
        [x: `uint168[${string}]`]: undefined;
        [x: `uint176[${string}]`]: undefined;
        [x: `uint184[${string}]`]: undefined;
        [x: `uint192[${string}]`]: undefined;
        [x: `uint200[${string}]`]: undefined;
        [x: `uint208[${string}]`]: undefined;
        [x: `uint216[${string}]`]: undefined;
        [x: `uint224[${string}]`]: undefined;
        [x: `uint232[${string}]`]: undefined;
        [x: `uint240[${string}]`]: undefined;
        [x: `uint248[${string}]`]: undefined;
        [x: `uint256[${string}]`]: undefined;
        string?: undefined;
        address?: undefined;
        bool?: undefined;
        bytes?: undefined;
        bytes2?: undefined;
        bytes3?: undefined;
        bytes1?: undefined;
        bytes4?: undefined;
        bytes5?: undefined;
        bytes32?: undefined;
        bytes31?: undefined;
        bytes30?: undefined;
        bytes29?: undefined;
        bytes28?: undefined;
        bytes27?: undefined;
        bytes26?: undefined;
        bytes25?: undefined;
        bytes24?: undefined;
        bytes23?: undefined;
        bytes22?: undefined;
        bytes21?: undefined;
        bytes20?: undefined;
        bytes19?: undefined;
        bytes18?: undefined;
        bytes17?: undefined;
        bytes16?: undefined;
        bytes15?: undefined;
        bytes14?: undefined;
        bytes13?: undefined;
        bytes12?: undefined;
        bytes11?: undefined;
        bytes10?: undefined;
        bytes9?: undefined;
        bytes8?: undefined;
        bytes7?: undefined;
        bytes6?: undefined;
        int40?: undefined;
        int32?: undefined;
        int24?: undefined;
        int16?: undefined;
        int8?: undefined;
        int48?: undefined;
        int56?: undefined;
        int64?: undefined;
        int72?: undefined;
        int80?: undefined;
        int88?: undefined;
        int96?: undefined;
        int104?: undefined;
        int112?: undefined;
        int120?: undefined;
        int128?: undefined;
        int136?: undefined;
        int144?: undefined;
        int152?: undefined;
        int160?: undefined;
        int168?: undefined;
        int176?: undefined;
        int184?: undefined;
        int192?: undefined;
        int200?: undefined;
        int208?: undefined;
        int216?: undefined;
        int224?: undefined;
        int232?: undefined;
        int240?: undefined;
        int248?: undefined;
        int256?: undefined;
        uint40?: undefined;
        uint32?: undefined;
        uint24?: undefined;
        uint16?: undefined;
        uint8?: undefined;
        uint48?: undefined;
        uint56?: undefined;
        uint64?: undefined;
        uint72?: undefined;
        uint80?: undefined;
        uint88?: undefined;
        uint96?: undefined;
        uint104?: undefined;
        uint112?: undefined;
        uint120?: undefined;
        uint128?: undefined;
        uint136?: undefined;
        uint144?: undefined;
        uint152?: undefined;
        uint160?: undefined;
        uint168?: undefined;
        uint176?: undefined;
        uint184?: undefined;
        uint192?: undefined;
        uint200?: undefined;
        uint208?: undefined;
        uint216?: undefined;
        uint224?: undefined;
        uint232?: undefined;
        uint240?: undefined;
        uint248?: undefined;
        uint256?: undefined;
    } | {
        [key: string]: unknown;
    }, TPrimaryType_1 extends string = string>(args: import("@alchemy/aa-core/dist/types/actions/smartAccount/signTypedData").SignTypedDataParameters<TTypedData_1, TPrimaryType_1, TAccount>) => Promise<`0x${string}`>;
} & (import("@alchemy/aa-core").IsUndefined<TAccount> extends false ? {
    getAddress: () => `0x${string}`;
} : {
    getAddress: (args: import("@alchemy/aa-core").GetAccountParameter<TAccount, SmartContractAccount<string, keyof import("@alchemy/aa-core").EntryPointRegistryBase<unknown>>>) => `0x${string}`;
}) & import("@alchemy/aa-core").BundlerActions & import("viem").PublicActions & import("..").AlchemySmartAccountClientActions<TAccount, import("@alchemy/aa-core").UserOperationContext | undefined>>[K_2]; } : never)[K_1]; } : never)[K]; } : never;
