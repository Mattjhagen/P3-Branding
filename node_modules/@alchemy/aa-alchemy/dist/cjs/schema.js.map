{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../src/schema.ts"],"names":[],"mappings":";;;;;;AAAA,8CAK0B;AAC1B,6CAAsC;AAEtC,8CAAoB;AAEP,QAAA,kBAAkB,GAAG,aAAC,CAAC,MAAM,CAAQ,CAAC,KAAK,EAAE,EAAE;IAC1D,MAAM,MAAM,GAAG,qBAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAExC,IAAI,WAAW,CAAC;IAChB,IAAI,CAAC;QACH,WAAW,GAAG,IAAA,kBAAQ,EAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAAC,MAAM,CAAC;QACP,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO,WAAW,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC;AAC7C,CAAC,EAAE,+HAA+H,CAAC,CAAC;AAEvH,QAAA,2BAA2B,GAAG,gCAAsB,CAAC,GAAG,CACnE,aAAC,CAAC,MAAM,CAAC;IACP,KAAK,EAAE,0BAAkB;IACzB,IAAI,EAAE,sCAA4B,CAAC,QAAQ,EAAE,CAAC,OAAO,CACnD,sCAA4B,CAAC,KAAK,CAAC,EAAE,CAAC,CACvC;CACF,CAAC,CACH,CAAC;AAEW,QAAA,sBAAsB,GAAG,aAAC,CAAC,UAAU,CAAC,qBAAO,CAAC,CAAC","sourcesContent":["import {\n  ChainSchema,\n  ConnectionConfigSchema,\n  SmartAccountClientOptsSchema,\n  getChain,\n} from \"@alchemy/aa-core\";\nimport { Alchemy } from \"alchemy-sdk\";\nimport type { Chain } from \"viem\";\nimport z from \"zod\";\n\nexport const AlchemyChainSchema = z.custom<Chain>((chain) => {\n  const _chain = ChainSchema.parse(chain);\n\n  let chainObject;\n  try {\n    chainObject = getChain(_chain.id);\n  } catch {\n    return false;\n  }\n\n  return chainObject.rpcUrls.alchemy != null;\n}, \"chain must include an alchemy rpc url. See `createAlchemyChain` or use the `AlchemyChainMap` exported from `@alchemy/aa-core`\");\n\nexport const AlchemyProviderConfigSchema = ConnectionConfigSchema.and(\n  z.object({\n    chain: AlchemyChainSchema,\n    opts: SmartAccountClientOptsSchema.optional().default(\n      SmartAccountClientOptsSchema.parse({})\n    ),\n  })\n);\n\nexport const AlchemySdkClientSchema = z.instanceof(Alchemy);\n"]}