{"version":3,"file":"button.js","sourceRoot":"","sources":["../../../../src/react/components/button.tsx"],"names":[],"mappings":";;;;AAAA,iCAKe;AACf,kDAAgD;AAcnC,QAAA,MAAM,GAAG,IAAA,kBAAU,EAC9B,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,KAAK,EAAE,EAAE,GAAG,EAAE,EAAE;IACxD,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE;QACrB,QAAQ,OAAO,EAAE,CAAC;YAChB,KAAK,WAAW;gBACd,OAAO,eAAe,CAAC;YACzB,KAAK,QAAQ;gBACX,OAAO,UAAU,CAAC;YACpB,KAAK,MAAM;gBACT,OAAO,UAAU,CAAC;YACpB,KAAK,SAAS,CAAC;YACf;gBACE,OAAO,aAAa,CAAC;QACzB,CAAC;IACH,CAAC,CAAC,EAAE,CAAC;IAEL,OAAO,CACL,oCACE,SAAS,EAAE,OAAO,QAAQ,IAAI,SAAS,IAAI,EAAE,EAAE,KAC3C,KAAK,EACT,GAAG,EAAE,GAAG,aAEP,IAAI,IAAI,2CAAO,IAAI,GAAQ,EAC3B,QAAQ,IACF,CACV,CAAC;AACJ,CAAC,CACF,CAAC;AAIK,MAAM,OAAO,GAAG,CAAC,KAAkB,EAAE,EAAE;IAC5C,QAAQ,KAAK,CAAC,OAAO,EAAE,CAAC;QACtB,KAAK,QAAQ,CAAC,CAAC,CAAC;YACd,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC,uBAAC,sBAAU,KAAG,CAAC;YAClC,OAAO,CACL,iCAAK,SAAS,EAAC,qBAAqB,aAClC,uBAAC,cAAM,OAAK,KAAK,EAAE,IAAI,EAAE,uBAAC,IAAI,KAAG,YAC9B,KAAK,CAAC,QAAQ,GACR,EACT,uBAAC,cAAM,OAAK,KAAK,EAAE,IAAI,EAAE,uBAAC,IAAI,KAAG,EAAE,QAAQ,kBACxC,KAAK,CAAC,QAAQ,GACR,IACL,CACP,CAAC;QACJ,CAAC;QACD;YACE,OAAO,CACL,iCAAK,SAAS,EAAC,qBAAqB,aAClC,uBAAC,cAAM,OAAK,KAAK,YAAG,KAAK,CAAC,QAAQ,GAAU,EAC5C,uBAAC,cAAM,OAAK,KAAK,EAAE,QAAQ,kBACxB,KAAK,CAAC,QAAQ,GACR,IACL,CACP,CAAC;IACN,CAAC;AACH,CAAC,CAAC;AAzBW,QAAA,OAAO,WAyBlB","sourcesContent":["import {\n  forwardRef,\n  type ButtonHTMLAttributes,\n  type DetailedHTMLProps,\n  type ReactNode,\n} from \"react\";\nimport { GoogleIcon } from \"../icons/google.js\";\n\ntype ButtonProps = (\n  | { variant?: \"primary\" | \"secondary\" | \"link\"; icon?: never }\n  | { variant: \"social\"; icon?: string | ReactNode }\n) &\n  Omit<\n    DetailedHTMLProps<\n      ButtonHTMLAttributes<HTMLButtonElement>,\n      HTMLButtonElement\n    >,\n    \"variant\" | \"ref\"\n  >;\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ variant, children, icon, className, ...props }, ref) => {\n    const btnClass = (() => {\n      switch (variant) {\n        case \"secondary\":\n          return \"btn-secondary\";\n        case \"social\":\n          return \"btn-auth\";\n        case \"link\":\n          return \"btn-link\";\n        case \"primary\":\n        default:\n          return \"btn-primary\";\n      }\n    })();\n\n    return (\n      <button\n        className={`btn ${btnClass} ${className ?? \"\"}`}\n        {...props}\n        ref={ref}\n      >\n        {icon && <span>{icon}</span>}\n        {children}\n      </button>\n    );\n  }\n);\n\n// this is temporary so not gonna document it\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport const DemoSet = (props: ButtonProps) => {\n  switch (props.variant) {\n    case \"social\": {\n      const Icon = () => <GoogleIcon />;\n      return (\n        <div className=\"flex flex-col gap-2\">\n          <Button {...props} icon={<Icon />}>\n            {props.children}\n          </Button>\n          <Button {...props} icon={<Icon />} disabled>\n            {props.children}\n          </Button>\n        </div>\n      );\n    }\n    default:\n      return (\n        <div className=\"flex flex-col gap-2\">\n          <Button {...props}>{props.children}</Button>\n          <Button {...props} disabled>\n            {props.children}\n          </Button>\n        </div>\n      );\n  }\n};\n"]}