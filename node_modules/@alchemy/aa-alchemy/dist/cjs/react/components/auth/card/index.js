"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthCard = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const useSignerStatus_js_1 = require("../../../hooks/useSignerStatus.js");
const constants_js_1 = require("../../constants.js");
const context_js_1 = require("../context.js");
const steps_js_1 = require("./steps.js");
const notification_js_1 = require("../../notification.js");
const useAuthError_js_1 = require("../../../hooks/useAuthError.js");
const navigation_js_1 = require("../../navigation.js");
const useAuthModal_js_1 = require("../../../hooks/useAuthModal.js");
const AuthCard = (props) => {
    const { showClose = false, onAuthSuccess, hideError } = props;
    const { closeAuthModal } = (0, useAuthModal_js_1.useAuthModal)();
    const { status, isAuthenticating } = (0, useSignerStatus_js_1.useSignerStatus)();
    const { authStep, setAuthStep } = (0, context_js_1.useAuthContext)();
    const error = (0, useAuthError_js_1.useAuthError)();
    const canGoBack = (0, react_1.useMemo)(() => {
        return ["email_verify"].includes(authStep.type);
    }, [authStep]);
    const onBack = (0, react_1.useCallback)(() => {
        switch (authStep.type) {
            case "email_verify":
                setAuthStep({ type: "initial" });
                break;
            default:
                console.warn("Unhandled back action for auth step", authStep);
        }
    }, [authStep, setAuthStep]);
    (0, react_1.useLayoutEffect)(() => {
        if (authStep.type === "complete") {
            onAuthSuccess?.();
        }
        else if (isAuthenticating && authStep.type === "initial") {
            const urlParams = new URLSearchParams(window.location.search);
            setAuthStep({
                type: "email_completing",
                createPasskeyAfter: urlParams.get(constants_js_1.IS_SIGNUP_QP) === "true",
            });
        }
    }, [authStep, status, isAuthenticating, setAuthStep, onAuthSuccess]);
    return ((0, jsx_runtime_1.jsxs)("div", { className: "relative", children: [(0, jsx_runtime_1.jsx)("div", { id: "akui-default-error-container", className: "absolute bottom-[calc(100%+8px)] w-full", children: !hideError && error && error.message && ((0, jsx_runtime_1.jsx)(notification_js_1.Notification, { message: error.message, type: "error" })) }), (0, jsx_runtime_1.jsxs)("div", { className: "modal-box relative flex flex-col items-center gap-5 text-fg-primary", children: [(canGoBack || showClose) && ((0, jsx_runtime_1.jsx)(navigation_js_1.Navigation, { showClose: showClose, showBack: canGoBack, onBack: onBack, onClose: closeAuthModal })), (0, jsx_runtime_1.jsx)(steps_js_1.Step, { ...props })] })] }));
};
exports.AuthCard = AuthCard;
//# sourceMappingURL=index.js.map