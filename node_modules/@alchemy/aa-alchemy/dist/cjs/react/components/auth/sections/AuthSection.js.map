{"version":3,"file":"AuthSection.js","sourceRoot":"","sources":["../../../../../../src/react/components/auth/sections/AuthSection.tsx"],"names":[],"mappings":";;;;AACA,iDAA2C;AAC3C,yEAAmE;AACnE,qDAA+C;AAQxC,MAAM,WAAW,GAAG,CAAC,EAAE,SAAS,EAAE,GAAG,KAAK,EAAoB,EAAE,EAAE;IAGvE,OAAO,CACL,gCAAK,SAAS,EAAC,4BAA4B,KAAK,KAAK,YAClD,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,EAAE;YACjC,QAAQ,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACtB,KAAK,OAAO;oBACV,OAAO,uBAAC,wBAAS,OAAiB,QAAQ,IAAnB,KAAK,CAAkB,CAAC;gBACjD,KAAK,SAAS;oBACZ,OAAO,uBAAC,4BAAW,OAAiB,QAAQ,IAAnB,KAAK,CAAkB,CAAC;gBACnD,KAAK,UAAU;oBACb,OAAO,uBAAC,gDAAqB,MAAM,KAAK,CAAI,CAAC;gBAC/C;oBACE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;YACvC,CAAC;QACH,CAAC,CAAC,GACE,CACP,CAAC;AACJ,CAAC,CAAC;AAnBW,QAAA,WAAW,eAmBtB","sourcesContent":["import type { AuthType } from \"../types.js\";\nimport { EmailAuth } from \"./EmailAuth.js\";\nimport { InjectedProvidersAuth } from \"./InjectedProvidersAuth.js\";\nimport { PasskeyAuth } from \"./PasskeyAuth.js\";\n\ntype AuthSectionProps = {\n  authTypes: AuthType[];\n};\n\n// This is not used externally\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport const AuthSection = ({ authTypes, ...props }: AuthSectionProps) => {\n  // TODO: this should also handle the button grouping logic present in the figma designs\n  // however, we only support email auth and passkey auth right now so it's not that important\n  return (\n    <div className=\"flex flex-col gap-2 w-full\" {...props}>\n      {authTypes.map((authType, index) => {\n        switch (authType.type) {\n          case \"email\":\n            return <EmailAuth key={index} {...authType} />;\n          case \"passkey\":\n            return <PasskeyAuth key={index} {...authType} />;\n          case \"injected\":\n            return <InjectedProvidersAuth key={index} />;\n          default:\n            throw new Error(\"Not implemented\");\n        }\n      })}\n    </div>\n  );\n};\n"]}