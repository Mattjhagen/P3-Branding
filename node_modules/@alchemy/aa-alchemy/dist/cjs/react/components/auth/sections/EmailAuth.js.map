{"version":3,"file":"EmailAuth.js","sourceRoot":"","sources":["../../../../../../src/react/components/auth/sections/EmailAuth.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useForm } from \"@tanstack/react-form\";\nimport { zodValidator } from \"@tanstack/zod-form-adapter\";\nimport { z } from \"zod\";\nimport { useAuthenticate } from \"../../../hooks/useAuthenticate.js\";\nimport { useSigner } from \"../../../hooks/useSigner.js\";\nimport { ChevronRight } from \"../../../icons/chevron.js\";\nimport { MailIcon } from \"../../../icons/mail.js\";\nimport { Button } from \"../../button.js\";\nimport { IS_SIGNUP_QP } from \"../../constants.js\";\nimport { Input } from \"../../input.js\";\nimport { useAuthContext } from \"../context.js\";\nimport type { AuthType } from \"../types.js\";\nimport { ls } from \"../../../strings.js\";\n\ntype EmailAuthProps = Extract<AuthType, { type: \"email\" }>;\n\n// this is not used externally\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport const EmailAuth = ({\n  hideButton = false,\n  buttonLabel = ls.login.email.button,\n  placeholder = ls.login.email.placeholder,\n}: EmailAuthProps) => {\n  const { setAuthStep } = useAuthContext();\n  const signer = useSigner();\n  const { authenticateAsync, isPending } = useAuthenticate({\n    onMutate: async (params) => {\n      if (\"email\" in params) {\n        setAuthStep({ type: \"email_verify\", email: params.email });\n      }\n    },\n    onSuccess: () => {\n      setAuthStep({ type: \"complete\" });\n    },\n    onError: (error) => {\n      // TODO: need to handle this and show it to the user\n      console.error(error);\n      // TODO: need to pass this error along\n      setAuthStep({ type: \"initial\" });\n    },\n  });\n\n  const form = useForm({\n    defaultValues: {\n      email: \"\",\n    },\n    onSubmit: async ({ value: { email } }) => {\n      const existingUser = await signer?.getUser(email);\n      const redirectParams = new URLSearchParams();\n      if (existingUser == null) {\n        redirectParams.set(IS_SIGNUP_QP, \"true\");\n      }\n\n      await authenticateAsync({ type: \"email\", email, redirectParams });\n    },\n    validatorAdapter: zodValidator,\n  });\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        form.handleSubmit();\n      }}\n    >\n      <div className=\"flex flex-col gap-2 w-full\">\n        <form.Field\n          name=\"email\"\n          validators={{\n            onChange: z.string().email(\"Must provide a valid email.\"),\n          }}\n        >\n          {(field) => (\n            <Input\n              name={field.name}\n              value={field.state.value}\n              onChange={(e) => field.handleChange(e.target.value)}\n              onBlur={field.handleBlur}\n              placeholder={placeholder}\n              iconLeft={<MailIcon />}\n              iconRight={\n                hideButton ? (\n                  <button\n                    type=\"submit\"\n                    className=\"match-input cursor-pointer focus:outline-none focus:opacity-25\"\n                  >\n                    <ChevronRight />\n                  </button>\n                ) : undefined\n              }\n              disabled={isPending}\n            />\n          )}\n        </form.Field>\n        <form.Subscribe\n          selector={(state) => [\n            state.canSubmit,\n            state.isSubmitting,\n            state.values.email,\n          ]}\n        >\n          {([canSubmit, isSubmitting, email]) =>\n            !hideButton ? (\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                disabled={Boolean(\n                  isPending || !canSubmit || isSubmitting || !email\n                )}\n              >\n                {buttonLabel}\n              </Button>\n            ) : null\n          }\n        </form.Subscribe>\n      </div>\n    </form>\n  );\n};\n"]}