"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InjectedProvidersAuth = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const useChain_js_1 = require("../../../hooks/useChain.js");
const useConnect_js_1 = require("../../../hooks/useConnect.js");
const button_js_1 = require("../../button.js");
const context_js_1 = require("../context.js");
const InjectedProvidersAuth = () => {
    const { chain } = (0, useChain_js_1.useChain)();
    const { connectors, connect } = (0, useConnect_js_1.useConnect)({
        onMutate: ({ connector }) => {
            setAuthStep({ type: "eoa_connect", connector: connector });
        },
        onSettled: (_result, error, { connector }) => {
            if (error) {
                setAuthStep({
                    type: "eoa_connect",
                    connector: connector,
                    error,
                });
                return;
            }
            setAuthStep({ type: "complete" });
        },
    });
    const { setAuthStep } = (0, context_js_1.useAuthContext)();
    if (!connectors.length) {
        return null;
    }
    return ((0, jsx_runtime_1.jsx)("div", { className: "flex flex-row gap-2 flex-wrap", children: connectors.map((connector) => {
            return ((0, jsx_runtime_1.jsx)(button_js_1.Button, { variant: "social", icon: connector.icon && ((0, jsx_runtime_1.jsx)("img", { src: connector.icon, alt: connector.name, height: 20, width: 20 })), onClick: () => {
                    connect({ connector, chainId: chain.id });
                    setAuthStep({ type: "eoa_connect", connector });
                }, children: connector.name }, connector.id));
        }) }));
};
exports.InjectedProvidersAuth = InjectedProvidersAuth;
//# sourceMappingURL=InjectedProvidersAuth.js.map