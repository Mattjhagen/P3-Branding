{"version":3,"file":"usePasskeyVerify.js","sourceRoot":"","sources":["../../../../../../src/react/components/auth/hooks/usePasskeyVerify.ts"],"names":[],"mappings":";;;AAAA,iCAAoC;AACpC,0EAAoE;AACpE,8CAA+C;AASxC,MAAM,gBAAgB,GAAG,GAAG,EAAE;IACnC,MAAM,EAAE,WAAW,EAAE,GAAG,IAAA,2BAAc,GAAE,CAAC;IACzC,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,IAAA,oCAAe,EAAC;QACjE,QAAQ,EAAE,GAAG,EAAE;YACb,WAAW,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAC1C,CAAC;QACD,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;YACf,WAAW,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;QACtD,CAAC;QACD,SAAS,EAAE,GAAG,EAAE;YACd,WAAW,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC;QACpC,CAAC;KACF,CAAC,CAAC;IAEH,MAAM,YAAY,GAAG,IAAA,mBAAW,EAC9B,GAAG,EAAE,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAC1D,CAAC,aAAa,CAAC,CAChB,CAAC;IAEF,OAAO;QACL,SAAS;QACT,YAAY;KACb,CAAC;AACJ,CAAC,CAAC;AAvBW,QAAA,gBAAgB,oBAuB3B","sourcesContent":["import { useCallback } from \"react\";\nimport { useAuthenticate } from \"../../../hooks/useAuthenticate.js\";\nimport { useAuthContext } from \"../context.js\";\n\n/**\n * Internal UI component hook used to complete passkey verification.\n *\n * This is used to login with a passkey, not create a new passkey\n *\n * @returns an authenticate function to do passkey verification and a boolean indicating if the operation is pending\n */\nexport const usePasskeyVerify = () => {\n  const { setAuthStep } = useAuthContext();\n  const { authenticate: authenticate_, isPending } = useAuthenticate({\n    onMutate: () => {\n      setAuthStep({ type: \"passkey_verify\" });\n    },\n    onError: (err) => {\n      setAuthStep({ type: \"passkey_verify\", error: err });\n    },\n    onSuccess: () => {\n      setAuthStep({ type: \"complete\" });\n    },\n  });\n\n  const authenticate = useCallback(\n    () => authenticate_({ type: \"passkey\", createNew: false }),\n    [authenticate_]\n  );\n\n  return {\n    isPending,\n    authenticate,\n  };\n};\n"]}