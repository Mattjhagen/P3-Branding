"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DemoSet = exports.Button = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const google_js_1 = require("../icons/google.js");
exports.Button = (0, react_1.forwardRef)(({ variant, children, icon, className, ...props }, ref) => {
    const btnClass = (() => {
        switch (variant) {
            case "secondary":
                return "btn-secondary";
            case "social":
                return "btn-auth";
            case "link":
                return "btn-link";
            case "primary":
            default:
                return "btn-primary";
        }
    })();
    return ((0, jsx_runtime_1.jsxs)("button", { className: `btn ${btnClass} ${className ?? ""}`, ...props, ref: ref, children: [icon && (0, jsx_runtime_1.jsx)("span", { children: icon }), children] }));
});
const DemoSet = (props) => {
    switch (props.variant) {
        case "social": {
            const Icon = () => (0, jsx_runtime_1.jsx)(google_js_1.GoogleIcon, {});
            return ((0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-2", children: [(0, jsx_runtime_1.jsx)(exports.Button, { ...props, icon: (0, jsx_runtime_1.jsx)(Icon, {}), children: props.children }), (0, jsx_runtime_1.jsx)(exports.Button, { ...props, icon: (0, jsx_runtime_1.jsx)(Icon, {}), disabled: true, children: props.children })] }));
        }
        default:
            return ((0, jsx_runtime_1.jsxs)("div", { className: "flex flex-col gap-2", children: [(0, jsx_runtime_1.jsx)(exports.Button, { ...props, children: props.children }), (0, jsx_runtime_1.jsx)(exports.Button, { ...props, disabled: true, children: props.children })] }));
    }
};
exports.DemoSet = DemoSet;
//# sourceMappingURL=button.js.map