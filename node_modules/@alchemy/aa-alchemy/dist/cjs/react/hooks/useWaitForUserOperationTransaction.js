"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useWaitForUserOperationTransaction = void 0;
const react_query_1 = require("@tanstack/react-query");
const context_js_1 = require("../context.js");
const errors_js_1 = require("../errors.js");
function useWaitForUserOperationTransaction({ client, }) {
    const { queryClient } = (0, context_js_1.useAlchemyAccountContext)();
    const { mutate: waitForUserOperationTransaction, data: waitForUserOperationTransactionResult, isPending: isWaitingForUserOperationTransaction, error, } = (0, react_query_1.useMutation)({
        mutationFn: async (params) => {
            if (!client) {
                throw new errors_js_1.ClientUndefinedHookError("useWaitForUserOperationTransaction");
            }
            return client.waitForUserOperationTransaction(params);
        },
    }, queryClient);
    return {
        waitForUserOperationTransaction,
        waitForUserOperationTransactionResult,
        isWaitingForUserOperationTransaction,
        error,
    };
}
exports.useWaitForUserOperationTransaction = useWaitForUserOperationTransaction;
//# sourceMappingURL=useWaitForUserOperationTransaction.js.map