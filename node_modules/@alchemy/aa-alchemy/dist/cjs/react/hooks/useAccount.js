"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useAccount = void 0;
const react_query_1 = require("@tanstack/react-query");
const react_1 = require("react");
const createAccount_js_1 = require("../../config/actions/createAccount.js");
const getAccount_js_1 = require("../../config/actions/getAccount.js");
const watchAccount_js_1 = require("../../config/actions/watchAccount.js");
const context_js_1 = require("../context.js");
const useSignerStatus_js_1 = require("./useSignerStatus.js");
function useAccount(params) {
    const { type, accountParams, skipCreate, ...mutationArgs } = params;
    const { config, queryClient } = (0, context_js_1.useAlchemyAccountContext)();
    const status = (0, useSignerStatus_js_1.useSignerStatus)();
    const account = (0, react_1.useSyncExternalStore)((0, watchAccount_js_1.watchAccount)(type, config), () => (0, getAccount_js_1.getAccount)(params, config), () => (0, getAccount_js_1.getAccount)(params, config));
    const { mutate, isPending } = (0, react_query_1.useMutation)({
        mutationFn: async () => {
            if (account.status !== "RECONNECTING" && account?.account) {
                return account.account;
            }
            return (0, createAccount_js_1.createAccount)(params, config);
        },
        mutationKey: ["createAccount", type],
        ...mutationArgs,
    }, queryClient);
    (0, react_1.useEffect)(() => {
        if (!skipCreate && status.isConnected && !account?.account && !isPending) {
            mutate();
        }
    }, [account, isPending, mutate, skipCreate, status.isConnected]);
    return {
        account: account.status === "READY" ? account?.account : undefined,
        address: account.status === "RECONNECTING" || account.status === "READY"
            ? account.account.address
            : undefined,
        isLoadingAccount: isPending ||
            account?.status === "INITIALIZING" ||
            account?.status === "RECONNECTING" ||
            status.isAuthenticating ||
            status.isInitializing,
    };
}
exports.useAccount = useAccount;
//# sourceMappingURL=useAccount.js.map