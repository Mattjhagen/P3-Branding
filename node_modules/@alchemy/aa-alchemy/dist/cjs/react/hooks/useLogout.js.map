{"version":3,"file":"useLogout.js","sourceRoot":"","sources":["../../../../src/react/hooks/useLogout.ts"],"names":[],"mappings":";AAAA,YAAY,CAAC;;;AAEb,uDAA4E;AAC5E,iCAAsC;AACtC,8CAAyD;AAEzD,iDAA2C;AAU3C,SAAgB,SAAS,CACvB,YAAoC;IAEpC,MAAM,EACJ,WAAW,EACX,MAAM,EAAE,EACN,SAAS,EAAE,EAAE,WAAW,EAAE,GAC3B,GACF,GAAG,IAAA,qCAAwB,GAAE,CAAC;IAC/B,MAAM,MAAM,GAAG,IAAA,wBAAS,GAAE,CAAC;IAC3B,MAAM,EAAE,eAAe,EAAE,GAAG,IAAA,qBAAa,EAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;IAEnE,MAAM,EACJ,MAAM,EAAE,MAAM,EACd,SAAS,EAAE,YAAY,EACvB,KAAK,GACN,GAAG,IAAA,yBAAW,EACb;QACE,UAAU,EAAE,KAAK,IAAI,EAAE;YACrB,MAAM,eAAe,EAAE,CAAC;YACxB,OAAO,MAAM,EAAE,UAAU,EAAE,CAAC;QAC9B,CAAC;QACD,GAAG,YAAY;KAChB,EACD,WAAW,CACZ,CAAC;IAEF,OAAO;QACL,MAAM;QACN,YAAY;QACZ,KAAK;KACN,CAAC;AACJ,CAAC;AAhCD,8BAgCC","sourcesContent":["\"use client\";\n\nimport { useMutation, type UseMutateFunction } from \"@tanstack/react-query\";\nimport { useDisconnect } from \"wagmi\";\nimport { useAlchemyAccountContext } from \"../context.js\";\nimport type { BaseHookMutationArgs } from \"../types.js\";\nimport { useSigner } from \"./useSigner.js\";\n\nexport type UseLogoutMutationArgs = BaseHookMutationArgs<void, void>;\n\nexport type UseLogoutResult = {\n  logout: UseMutateFunction<void, Error, void, unknown>;\n  isLoggingOut: boolean;\n  error: Error | null;\n};\n\nexport function useLogout(\n  mutationArgs?: UseLogoutMutationArgs\n): UseLogoutResult {\n  const {\n    queryClient,\n    config: {\n      _internal: { wagmiConfig },\n    },\n  } = useAlchemyAccountContext();\n  const signer = useSigner();\n  const { disconnectAsync } = useDisconnect({ config: wagmiConfig });\n\n  const {\n    mutate: logout,\n    isPending: isLoggingOut,\n    error,\n  } = useMutation(\n    {\n      mutationFn: async () => {\n        await disconnectAsync();\n        return signer?.disconnect();\n      },\n      ...mutationArgs,\n    },\n    queryClient\n  );\n\n  return {\n    logout,\n    isLoggingOut,\n    error,\n  };\n}\n"]}