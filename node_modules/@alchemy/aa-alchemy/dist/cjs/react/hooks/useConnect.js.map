{"version":3,"file":"useConnect.js","sourceRoot":"","sources":["../../../../src/react/hooks/useConnect.ts"],"names":[],"mappings":";;;AACA,iCAIe;AACf,8CAAyD;AAUlD,MAAM,UAAU,GAAG,CACxB,MAAiD,EACnB,EAAE;IAChC,MAAM,EACJ,MAAM,EAAE,EACN,SAAS,EAAE,EAAE,WAAW,EAAE,GAC3B,GACF,GAAG,IAAA,qCAAwB,GAAE,CAAC;IAE/B,OAAO,IAAA,kBAAgB,EAAC;QACtB,MAAM,EAAE,WAAW;QACnB,QAAQ,EAAE,MAAM;KACjB,CAAC,CAAC;AACL,CAAC,CAAC;AAbW,QAAA,UAAU,cAarB","sourcesContent":["import type { Config } from \"@wagmi/core\";\nimport {\n  useConnect as wagmi_useConnect,\n  type UseConnectParameters,\n  type UseConnectReturnType,\n} from \"wagmi\";\nimport { useAlchemyAccountContext } from \"../context.js\";\n\n/**\n * Re-exported wagmi hook for connecting an EOA. This hook\n * uses the internal wagmi config though so that the state\n * is in sync with the rest of the Alchemy Account hook state\n *\n * @param params mutation parameters to use for the connect mutation\n * @returns see {@link UseConnectReturnType} from wagmi\n */\nexport const useConnect = (\n  params?: UseConnectParameters<Config>[\"mutation\"]\n): UseConnectReturnType<Config> => {\n  const {\n    config: {\n      _internal: { wagmiConfig },\n    },\n  } = useAlchemyAccountContext();\n\n  return wagmi_useConnect({\n    config: wagmiConfig,\n    mutation: params,\n  });\n};\n"]}