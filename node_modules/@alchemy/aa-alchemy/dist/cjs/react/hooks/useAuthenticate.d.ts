import { type UseMutateAsyncFunction, type UseMutateFunction } from "@tanstack/react-query";
import type { User } from "../../signer/index.js";
import type { AuthParams } from "../../signer/signer.js";
import type { BaseHookMutationArgs } from "../types.js";
export type UseAuthenticateMutationArgs = BaseHookMutationArgs<User, AuthParams>;
export type UseAuthenticateResult = {
    authenticate: UseMutateFunction<User, Error, AuthParams, unknown>;
    authenticateAsync: UseMutateAsyncFunction<User, Error, AuthParams, unknown>;
    isPending: boolean;
    error: Error | null;
};
export declare function useAuthenticate(mutationArgs?: UseAuthenticateMutationArgs): UseAuthenticateResult;
