{"version":3,"file":"useUser.js","sourceRoot":"","sources":["../../../../src/react/hooks/useUser.ts"],"names":[],"mappings":";AAAA,YAAY,CAAC;;;AAEb,iCAAsD;AACtD,iCAAuD;AACvD,gEAA0D;AAC1D,oEAA8D;AAE9D,8CAAyD;AAIlD,MAAM,OAAO,GAAG,GAAkB,EAAE;IACzC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAA,qCAAwB,GAAE,CAAC;IAC9C,MAAM,EACJ,SAAS,EAAE,EAAE,WAAW,EAAE,GAC3B,GAAG,MAAM,CAAC;IAEX,MAAM,OAAO,GAAG,IAAA,kBAAgB,EAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;IAC1D,MAAM,IAAI,GAAG,IAAA,4BAAoB,EAC/B,IAAA,wBAAS,EAAC,MAAM,CAAC,EACjB,GAAG,EAAE,CAAC,IAAA,oBAAO,EAAC,MAAM,CAAC,IAAI,IAAI,EAC7B,GAAG,EAAE,CAAC,IAAA,oBAAO,EAAC,MAAM,CAAC,IAAI,IAAI,CAC9B,CAAC;IACF,MAAM,OAAO,GAAG,IAAA,eAAO,EAAC,GAAG,EAAE;QAC3B,IAAI,OAAO,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;YACnC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO;YACL,OAAO,EAAE,OAAO,CAAC,OAAO;YAGxB,KAAK,EAAE,OAAO,CAAC,OAAO;YACtB,MAAM,EAAE,OAAO,CAAC,OAAO;YACvB,IAAI,EAAE,KAAc;SACrB,CAAC;IACJ,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAEtC,IAAI,OAAO;QAAE,OAAO,OAAO,CAAC;IAE5B,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AA9BW,QAAA,OAAO,WA8BlB","sourcesContent":["\"use client\";\n\nimport { useMemo, useSyncExternalStore } from \"react\";\nimport { useAccount as wagmi_useAccount } from \"wagmi\";\nimport { getUser } from \"../../config/actions/getUser.js\";\nimport { watchUser } from \"../../config/actions/watchUser.js\";\nimport type { User } from \"../../signer/index.js\";\nimport { useAlchemyAccountContext } from \"../context.js\";\n\nexport type UseUserResult = (User & { type: \"eoa\" | \"sca\" }) | null;\n\nexport const useUser = (): UseUserResult => {\n  const { config } = useAlchemyAccountContext();\n  const {\n    _internal: { wagmiConfig },\n  } = config;\n\n  const account = wagmi_useAccount({ config: wagmiConfig });\n  const user = useSyncExternalStore(\n    watchUser(config),\n    () => getUser(config) ?? null,\n    () => getUser(config) ?? null\n  );\n  const eoaUser = useMemo(() => {\n    if (account.status !== \"connected\") {\n      return null;\n    }\n\n    return {\n      address: account.address,\n      // for backwards compat\n      // TODO: when we upgrade to v4 we should fix this with a breaking change\n      orgId: account.address,\n      userId: account.address,\n      type: \"eoa\" as const,\n    };\n  }, [account.address, account.status]);\n\n  if (eoaUser) return eoaUser;\n\n  return user;\n};\n"]}