"use strict";
"use client";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useExportAccount = void 0;
const react_query_1 = require("@tanstack/react-query");
const react_1 = require("react");
const createConfig_js_1 = require("../../config/createConfig.js");
const context_js_1 = require("../context.js");
const useSigner_js_1 = require("./useSigner.js");
function useExportAccount(args) {
    const { params, ...mutationArgs } = args ?? {};
    const { queryClient } = (0, context_js_1.useAlchemyAccountContext)();
    const signer = (0, useSigner_js_1.useSigner)();
    const { iframeContainerId } = params ?? {
        iframeContainerId: createConfig_js_1.DEFAULT_IFRAME_CONTAINER_ID,
    };
    const { mutate: exportAccount, isPending, error, data, } = (0, react_query_1.useMutation)({
        mutationFn: async () => signer.exportWallet(params ?? { iframeContainerId }),
        ...mutationArgs,
    }, queryClient);
    const ExportAccountComponent = (0, react_1.useCallback)(({ iframeCss, className, isExported }) => {
        const iframeCssString = Object.entries(iframeCss ?? {}).reduce((acc, [key, value]) => {
            const kebabKey = key
                .replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2")
                .toLocaleLowerCase();
            return `${acc}\n${kebabKey}: ${value};`;
        }, "");
        return (0, react_1.createElement)("div", {
            className,
            style: {
                display: !isExported ? "none" : "block",
            },
            id: iframeContainerId,
        }, (0, react_1.createElement)("style", {}, `iframe { ${iframeCssString} } `));
    }, [iframeContainerId]);
    return {
        isExported: !!data,
        exportAccount,
        isExporting: isPending,
        error,
        ExportAccountComponent,
    };
}
exports.useExportAccount = useExportAccount;
//# sourceMappingURL=useExportAccount.js.map