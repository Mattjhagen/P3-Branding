"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.alchemyFeeEstimator = void 0;
const aa_core_1 = require("@alchemy/aa-core");
const alchemyFeeEstimator = (client) => async (struct, { overrides, feeOptions }) => {
    let [block, maxPriorityFeePerGasEstimate] = await Promise.all([
        client.getBlock({ blockTag: "latest" }),
        client.request({
            method: "rundler_maxPriorityFeePerGas",
            params: [],
        }),
    ]);
    const baseFeePerGas = block.baseFeePerGas;
    if (baseFeePerGas == null) {
        throw new Error("baseFeePerGas is null");
    }
    const maxPriorityFeePerGas = (0, aa_core_1.applyUserOpOverrideOrFeeOption)(maxPriorityFeePerGasEstimate, overrides?.maxPriorityFeePerGas, feeOptions?.maxPriorityFeePerGas);
    const maxFeePerGas = (0, aa_core_1.applyUserOpOverrideOrFeeOption)(baseFeePerGas + BigInt(maxPriorityFeePerGas), overrides?.maxFeePerGas, feeOptions?.maxFeePerGas);
    return {
        ...struct,
        maxPriorityFeePerGas,
        maxFeePerGas,
    };
};
exports.alchemyFeeEstimator = alchemyFeeEstimator;
//# sourceMappingURL=feeEstimator.js.map