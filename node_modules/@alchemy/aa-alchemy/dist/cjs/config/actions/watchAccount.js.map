{"version":3,"file":"watchAccount.js","sourceRoot":"","sources":["../../../../src/config/actions/watchAccount.ts"],"names":[],"mappings":";;;AAAA,4CAAuD;AAGvD,+CAAyC;AAElC,MAAM,YAAY,GACvB,CACE,IAAc,EACd,MAA6B,EAC7B,EAAE,CACJ,CAAC,QAAuD,EAAE,EAAE;IAC1D,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;IACxD,IAAI,CAAC,QAAQ,EAAE,CAAC;QACd,MAAM,IAAI,mCAAuB,CAAC,SAAS,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,KAAK,GAAG,IAAA,sBAAQ,EAAC,MAAM,CAAC,CAAC;IAC/B,OAAO,MAAM,CAAC,WAAW,CAAC,SAAS,CAEjC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,QAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAC3C,QAAQ,EACR;QACE,UAAU,CAAC,CAAC,EAAE,CAAC;YACb,OAAO,CAAC,EAAE,MAAM,KAAK,OAAO,IAAI,CAAC,EAAE,MAAM,KAAK,OAAO;gBACnD,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO;gBACzC,CAAC,CAAC,CAAC,EAAE,MAAM,KAAK,CAAC,EAAE,MAAM,CAAC;QAC9B,CAAC;KACF,CACF,CAAC;AACJ,CAAC,CAAC;AAxBS,QAAA,YAAY,gBAwBrB","sourcesContent":["import { ClientOnlyPropertyError } from \"../errors.js\";\nimport type { AlchemyAccountsConfig, SupportedAccountTypes } from \"../types\";\nimport { type GetAccountResult } from \"./getAccount.js\";\nimport { getChain } from \"./getChain.js\";\n\nexport const watchAccount =\n  <TAccount extends SupportedAccountTypes>(\n    type: TAccount,\n    config: AlchemyAccountsConfig\n  ) =>\n  (onChange: (account: GetAccountResult<TAccount>) => void) => {\n    const accounts = config.clientStore.getState().accounts;\n    if (!accounts) {\n      throw new ClientOnlyPropertyError(\"account\");\n    }\n\n    const chain = getChain(config);\n    return config.clientStore.subscribe(\n      // this should be available on the client now because of the check above\n      ({ accounts }) => accounts![chain.id][type],\n      onChange,\n      {\n        equalityFn(a, b) {\n          return a?.status === \"READY\" && b?.status === \"READY\"\n            ? a.account.address === b.account.address\n            : a?.status === b?.status;\n        },\n      }\n    );\n  };\n"]}