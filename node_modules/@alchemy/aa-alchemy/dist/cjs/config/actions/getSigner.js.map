{"version":3,"file":"getSigner.js","sourceRoot":"","sources":["../../../../src/config/actions/getSigner.ts"],"names":[],"mappings":";;;AAaO,MAAM,SAAS,GAAG,CACvB,MAA6B,EACP,EAAE;IACxB,OAAO,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC;AACtD,CAAC,CAAC;AAJW,QAAA,SAAS,aAIpB","sourcesContent":["import type { AlchemySigner } from \"../../signer/signer.js\";\nimport type { AlchemyAccountsConfig } from \"../types\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport type { hydrate } from \"../hydrate.js\";\n\n/**\n * If there is a signer attached to the client state, it will return it.\n * The signer should always be null on the server, and will be set on the client\n * if the store was properly hydrated. (see {@link hydrate})\n *\n * @param config The account config which contains the client store\n * @returns the instance of the signer present in the store if it exists, otherwise null\n */\nexport const getSigner = (\n  config: AlchemyAccountsConfig\n): AlchemySigner | null => {\n  return config.clientStore.getState().signer ?? null;\n};\n"]}