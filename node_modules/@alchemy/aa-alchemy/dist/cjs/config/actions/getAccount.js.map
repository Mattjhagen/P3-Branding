{"version":3,"file":"getAccount.js","sourceRoot":"","sources":["../../../../src/config/actions/getAccount.ts"],"names":[],"mappings":";;;AAGA,+CAAyC;AAQlC,MAAM,UAAU,GAAG,CACxB,EAAE,IAAI,EAA8B,EACpC,MAA6B,EACD,EAAE;IAC9B,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC;IACxD,MAAM,KAAK,GAAG,IAAA,sBAAQ,EAAC,MAAM,CAAC,CAAC;IAC/B,MAAM,OAAO,GAAG,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC7C,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,OAAO;YACL,OAAO,EAAE,SAAS;YAClB,MAAM,EAAE,cAAc;SACvB,CAAC;IACJ,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAfW,QAAA,UAAU,cAerB","sourcesContent":["import type { AccountState } from \"../store/types.js\";\nimport type { AlchemyAccountsConfig, SupportedAccountTypes } from \"../types\";\nimport { type CreateAccountParams } from \"./createAccount.js\";\nimport { getChain } from \"./getChain.js\";\n\nexport type GetAccountResult<TAccount extends SupportedAccountTypes> =\n  AccountState<TAccount>;\n\nexport type GetAccountParams<TAccount extends SupportedAccountTypes> =\n  CreateAccountParams<TAccount>;\n\nexport const getAccount = <TAccount extends SupportedAccountTypes>(\n  { type }: GetAccountParams<TAccount>,\n  config: AlchemyAccountsConfig\n): GetAccountResult<TAccount> => {\n  const accounts = config.clientStore.getState().accounts;\n  const chain = getChain(config);\n  const account = accounts?.[chain.id]?.[type];\n  if (!account) {\n    return {\n      account: undefined,\n      status: \"DISCONNECTED\",\n    };\n  }\n\n  return account;\n};\n"]}