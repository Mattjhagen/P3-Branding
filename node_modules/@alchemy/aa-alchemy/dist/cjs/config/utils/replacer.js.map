{"version":3,"file":"replacer.js","sourceRoot":"","sources":["../../../../src/config/utils/replacer.ts"],"names":[],"mappings":";;;AAOO,MAAM,iBAAiB,GAAG,CAAC,IAAY,EAAE,MAAW,EAAE,EAAE;IAC7D,IAAI,KAAK,GAAG,MAAM,CAAC;IACnB,IAAI,OAAO,KAAK,KAAK,QAAQ;QAC3B,KAAK,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC;IACzD,IAAI,KAAK,YAAY,GAAG;QACtB,KAAK,GAAG;YACN,MAAM,EAAE,KAAK;YACb,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;SACpC,CAAC;IACJ,OAAO,KAAK,CAAC;AACf,CAAC,CAAC;AAVW,QAAA,iBAAiB,qBAU5B","sourcesContent":["/**\n * JSON stringify replacer that correctly handles BigInt and Map types.\n *\n * @param _key the key in the JSON object\n * @param value_ the value to convert if map or bigint\n * @returns the replaced value\n */\nexport const bigintMapReplacer = (_key: string, value_: any) => {\n  let value = value_;\n  if (typeof value === \"bigint\")\n    value = { __type: \"bigint\", value: value_.toString() };\n  if (value instanceof Map)\n    value = {\n      __type: \"Map\",\n      value: Array.from(value_.entries()),\n    };\n  return value;\n};\n"]}