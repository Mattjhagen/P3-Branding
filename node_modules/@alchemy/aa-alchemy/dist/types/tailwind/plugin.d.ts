import type { Config as TailwindConfig } from "tailwindcss";
import plugin from "tailwindcss/plugin";
import type { AccountKitThemeOverride } from "./types";
type TailWindPlugin = ReturnType<typeof plugin>;
/**
 * Get the path to the aa-alchemy package and the tailwind content.
 * This is used within the tailwind.config.js to include the aa-alchemy content.
 *
 * @example
 * ```ts
 *
 * import accountKitUi, { getAccountKitContentPath } from "@alchemy/aa-alchemy/tailwind";
 * import type { Config } from "tailwindcss";
 *
 * const config: Config = {
 *  content: [
 *    ...otheContetPaths
 *   getAccountKitContentPath()
 *  ],
 *  theme: {},
 *  plugins: [accountKitUi()],
 * };
 *
 * export default config;
 * ```
 * @returns The resolved path to the aa-alchemy package and the tailwind content
 */
export declare const getAccountKitContentPath: () => string;
/**
 * Given an optional theme override, returns a tailwind plugin that
 * creates all of the necessary css to use the account kit ui components.
 *
 * @example
 * ```ts
 *
 * import accountKitUi, { getAccountKitContentPath } from "@alchemy/aa-alchemy/tailwind";
 * import type { Config } from "tailwindcss";
 *
 * const config: Config = {
 *  content: [
 *    ...otheContetPaths
 *   getAccountKitContentPath()
 *  ],
 *  theme: {},
 *  plugins: [accountKitUi()],
 * };
 *
 * export default config;
 * ```
 * @param themeOverride optional parameter that allows for overriding any of the default account kit theme values
 * @returns a TailwindPlugin to be used within the tailwind.config.js
 */
export declare const accountKitUi: (themeOverride?: AccountKitThemeOverride) => TailWindPlugin;
/**
 * A utility function for augmenting an existing tailwind config with the account kit ui components
 *
 * @param config the existing tailwind config
 * @param themeOverride optional parameter that allows overrides to Account Kit UI theme styles
 * @returns the augmented tailwind config
 */
export declare const withAccountKitUi: (config: TailwindConfig, themeOverride?: AccountKitThemeOverride) => TailwindConfig;
export {};
//# sourceMappingURL=plugin.d.ts.map