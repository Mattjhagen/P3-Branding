import type { Address } from "viem";
import { type GetAccountParams } from "../../config/actions/getAccount.js";
import { type SupportedAccount, type SupportedAccountTypes, type SupportedAccounts } from "../../config/index.js";
import type { BaseHookMutationArgs } from "../types.js";
export type UseAccountMutationArgs<TAccount extends SupportedAccountTypes> = BaseHookMutationArgs<SupportedAccount<TAccount> | SupportedAccounts, void>;
export type UseAccountResult<TAccount extends SupportedAccountTypes> = {
    account?: SupportedAccount<TAccount>;
    address?: Address;
    isLoadingAccount: boolean;
};
export type UseAccountProps<TAccount extends SupportedAccountTypes> = GetAccountParams<TAccount> & {
    skipCreate?: boolean;
} & UseAccountMutationArgs<TAccount>;
export declare function useAccount<TAccount extends SupportedAccountTypes>(params: UseAccountProps<TAccount>): UseAccountResult<TAccount>;
//# sourceMappingURL=useAccount.d.ts.map