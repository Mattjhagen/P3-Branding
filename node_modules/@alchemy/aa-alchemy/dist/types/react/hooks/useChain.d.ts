import type { Chain } from "viem";
import type { BaseHookMutationArgs } from "../types.js";
export type UseChainParams = BaseHookMutationArgs<void, {
    chain: Chain;
}>;
export interface UseChainResult {
    chain: Chain;
    setChain: (chain: Chain) => void;
    isSettingChain: boolean;
}
/**
 * A hook that returns the current chain as well as a function to set the chain
 *
 * @param mutationArgs optional properties which contain mutation arg overrides
 * @returns an object containing the current chain and a function to set the chain as well as loading state of setting the chain
 */
export declare function useChain(mutationArgs?: UseChainParams): {
    chain: Chain;
    setChain: import("@tanstack/react-query/build/legacy/types.js").UseMutateFunction<void, Error, {
        chain: Chain;
    }, unknown>;
    isSettingChain: boolean;
};
//# sourceMappingURL=useChain.d.ts.map