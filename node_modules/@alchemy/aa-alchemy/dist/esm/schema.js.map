{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../src/schema.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,WAAW,EACX,sBAAsB,EACtB,4BAA4B,EAC5B,QAAQ,GACT,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AAEtC,OAAO,CAAC,MAAM,KAAK,CAAC;AAEpB,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAAC,CAAC,MAAM,CAAQ,CAAC,KAAK,EAAE,EAAE;IAC1D,MAAM,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAExC,IAAI,WAAW,CAAC;IAChB,IAAI,CAAC;QACH,WAAW,GAAG,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAAC,MAAM,CAAC;QACP,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO,WAAW,CAAC,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC;AAC7C,CAAC,EAAE,+HAA+H,CAAC,CAAC;AAEpI,MAAM,CAAC,MAAM,2BAA2B,GAAG,sBAAsB,CAAC,GAAG,CACnE,CAAC,CAAC,MAAM,CAAC;IACP,KAAK,EAAE,kBAAkB;IACzB,IAAI,EAAE,4BAA4B,CAAC,QAAQ,EAAE,CAAC,OAAO,CACnD,4BAA4B,CAAC,KAAK,CAAC,EAAE,CAAC,CACvC;CACF,CAAC,CACH,CAAC;AAEF,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC","sourcesContent":["import {\n  ChainSchema,\n  ConnectionConfigSchema,\n  SmartAccountClientOptsSchema,\n  getChain,\n} from \"@alchemy/aa-core\";\nimport { Alchemy } from \"alchemy-sdk\";\nimport type { Chain } from \"viem\";\nimport z from \"zod\";\n\nexport const AlchemyChainSchema = z.custom<Chain>((chain) => {\n  const _chain = ChainSchema.parse(chain);\n\n  let chainObject;\n  try {\n    chainObject = getChain(_chain.id);\n  } catch {\n    return false;\n  }\n\n  return chainObject.rpcUrls.alchemy != null;\n}, \"chain must include an alchemy rpc url. See `createAlchemyChain` or use the `AlchemyChainMap` exported from `@alchemy/aa-core`\");\n\nexport const AlchemyProviderConfigSchema = ConnectionConfigSchema.and(\n  z.object({\n    chain: AlchemyChainSchema,\n    opts: SmartAccountClientOptsSchema.optional().default(\n      SmartAccountClientOptsSchema.parse({})\n    ),\n  })\n);\n\nexport const AlchemySdkClientSchema = z.instanceof(Alchemy);\n"]}