import { ConnectionConfigSchema } from "@alchemy/aa-core";
import { createStorage, createConfig as createWagmiConfig } from "@wagmi/core";
import { DEFAULT_SESSION_MS } from "../signer/session/manager.js";
import { createClientStore } from "./store/client.js";
import { createCoreStore } from "./store/core.js";
import { DEFAULT_STORAGE_KEY } from "./store/types.js";
export const DEFAULT_IFRAME_CONTAINER_ID = "alchemy-signer-iframe-container";
export const createConfig = (params) => {
    const { chain, iframeConfig, rootOrgId, rpId, sessionConfig, signerConnection, ssr, storage, connectors, ...connectionConfig } = params;
    const connections = [];
    if (connectionConfig.connections != null) {
        connectionConfig.connections.forEach(({ chain, ...config }) => {
            connections.push({
                ...ConnectionConfigSchema.parse(config),
                chain,
            });
        });
    }
    else {
        connections.push({
            ...ConnectionConfigSchema.parse(connectionConfig),
            chain,
        });
    }
    const coreStore = createCoreStore({
        connections,
        chain,
        storage: storage?.(),
        ssr,
    });
    const clientStore = createClientStore({
        client: {
            connection: signerConnection ?? connections[0],
            iframeConfig,
            rootOrgId,
            rpId,
        },
        sessionConfig,
        storage: storage?.(sessionConfig?.expirationTimeMs
            ? { sessionLength: sessionConfig.expirationTimeMs }
            : undefined),
        chains: connections.map((x) => x.chain),
        ssr,
    });
    const wagmiConfig = createWagmiConfig({
        connectors,
        chains: [chain, ...connections.map((c) => c.chain)],
        client: () => config.coreStore.getState().bundlerClient,
        storage: createStorage({
            key: `${DEFAULT_STORAGE_KEY}:wagmi`,
            storage: storage
                ? storage()
                : typeof window !== "undefined"
                    ? localStorage
                    : undefined,
        }),
        ssr,
    });
    const config = {
        coreStore,
        clientStore,
        _internal: {
            ssr,
            wagmiConfig,
            storageKey: "alchemy-account-state",
            sessionLength: sessionConfig?.expirationTimeMs ?? DEFAULT_SESSION_MS,
        },
    };
    return config;
};
//# sourceMappingURL=createConfig.js.map