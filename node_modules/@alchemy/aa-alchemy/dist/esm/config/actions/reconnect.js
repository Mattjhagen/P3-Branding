import { createSigner } from "../store/client.js";
import { createAccount } from "./createAccount.js";
import { getChain } from "./getChain.js";
export async function reconnect(config) {
    const { clientStore } = config;
    const signerConfig = clientStore.getState().config;
    const accountConfigs = clientStore.getState().accountConfigs;
    const signer = createSigner(signerConfig);
    const chain = getChain(config);
    clientStore.setState({
        signer,
    });
    const unsubConnected = signer.on("connected", async () => {
        if (accountConfigs[chain.id]?.["LightAccount"]) {
            await createAccount({
                type: "LightAccount",
                accountParams: accountConfigs[chain.id]["LightAccount"],
            }, config);
        }
        if (accountConfigs[chain.id]?.["MultiOwnerModularAccount"]) {
            await createAccount({
                type: "MultiOwnerModularAccount",
                accountParams: accountConfigs[chain.id]["MultiOwnerModularAccount"],
            }, config);
        }
        unsubConnected();
    });
    const unsubDisconnected = signer.on("disconnected", () => {
        clientStore.setState({
            accountConfigs: {},
        });
        unsubDisconnected();
    });
}
//# sourceMappingURL=reconnect.js.map