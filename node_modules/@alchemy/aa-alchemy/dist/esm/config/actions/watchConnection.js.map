{"version":3,"file":"watchConnection.js","sourceRoot":"","sources":["../../../../src/config/actions/watchConnection.ts"],"names":[],"mappings":"AAQA,MAAM,UAAU,eAAe,CAAC,MAA6B;IAC3D,OAAO,CAAC,QAA0C,EAAE,EAAE;QACpD,OAAO,MAAM,CAAC,SAAS,CAAC,SAAS,CAC/B,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,EACpB,CAAC,KAAK,EAAE,EAAE;YACR,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS;iBAChC,QAAQ,EAAE;iBACV,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAE7B,IAAI,UAAU,EAAE,CAAC;gBACf,QAAQ,CAAC,UAAU,CAAC,CAAC;YACvB,CAAC;QACH,CAAC,CACF,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import type { AlchemyAccountsConfig, Connection } from \"../types\";\n\n/**\n * Subscribe to changes to the active connection\n *\n * @param config the account config\n * @returns a function which takes an onChange callback and returns an unsubscribe function\n */\nexport function watchConnection(config: AlchemyAccountsConfig) {\n  return (onChange: (connection: Connection) => void) => {\n    return config.coreStore.subscribe(\n      ({ chain }) => chain,\n      (chain) => {\n        const connection = config.coreStore\n          .getState()\n          .connections.get(chain.id);\n\n        if (connection) {\n          onChange(connection);\n        }\n      }\n    );\n  };\n}\n"]}