{"version":3,"file":"getConnection.js","sourceRoot":"","sources":["../../../../src/config/actions/getConnection.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,cAAc,CAAC;AAElD,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAQzC,MAAM,UAAU,aAAa,CAAC,MAA6B;IACzD,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC/B,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACzE,IAAI,CAAC,UAAU,EAAE,CAAC;QAChB,MAAM,IAAI,kBAAkB,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["import { ChainNotFoundError } from \"../errors.js\";\nimport type { AlchemyAccountsConfig, Connection } from \"../types\";\nimport { getChain } from \"./getChain.js\";\n\n/**\n * Used to get the connection for the currently active chain\n *\n * @param config the account config\n * @returns a connection object for the current active chain\n */\nexport function getConnection(config: AlchemyAccountsConfig): Connection {\n  const chain = getChain(config);\n  const connection = config.coreStore.getState().connections.get(chain.id);\n  if (!connection) {\n    throw new ChainNotFoundError(chain);\n  }\n\n  return connection;\n}\n"]}