import { useCallback } from "react";
import { useAuthenticate } from "../../../hooks/useAuthenticate.js";
import { useAuthContext } from "../context.js";
export const usePasskeyVerify = () => {
    const { setAuthStep } = useAuthContext();
    const { authenticate: authenticate_, isPending } = useAuthenticate({
        onMutate: () => {
            setAuthStep({ type: "passkey_verify" });
        },
        onError: (err) => {
            setAuthStep({ type: "passkey_verify", error: err });
        },
        onSuccess: () => {
            setAuthStep({ type: "complete" });
        },
    });
    const authenticate = useCallback(() => authenticate_({ type: "passkey", createNew: false }), [authenticate_]);
    return {
        isPending,
        authenticate,
    };
};
//# sourceMappingURL=usePasskeyVerify.js.map