import { jsx as _jsx } from "react/jsx-runtime";
import { useChain } from "../../../hooks/useChain.js";
import { useConnect } from "../../../hooks/useConnect.js";
import { Button } from "../../button.js";
import { useAuthContext } from "../context.js";
export const InjectedProvidersAuth = () => {
    const { chain } = useChain();
    const { connectors, connect } = useConnect({
        onMutate: ({ connector }) => {
            setAuthStep({ type: "eoa_connect", connector: connector });
        },
        onSettled: (_result, error, { connector }) => {
            if (error) {
                setAuthStep({
                    type: "eoa_connect",
                    connector: connector,
                    error,
                });
                return;
            }
            setAuthStep({ type: "complete" });
        },
    });
    const { setAuthStep } = useAuthContext();
    if (!connectors.length) {
        return null;
    }
    return (_jsx("div", { className: "flex flex-row gap-2 flex-wrap", children: connectors.map((connector) => {
            return (_jsx(Button, { variant: "social", icon: connector.icon && (_jsx("img", { src: connector.icon, alt: connector.name, height: 20, width: 20 })), onClick: () => {
                    connect({ connector, chainId: chain.id });
                    setAuthStep({ type: "eoa_connect", connector });
                }, children: connector.name }, connector.id));
        }) }));
};
//# sourceMappingURL=InjectedProvidersAuth.js.map