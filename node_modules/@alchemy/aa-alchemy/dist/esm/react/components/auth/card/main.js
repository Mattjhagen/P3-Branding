import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Fragment } from "react";
import { Divider } from "../../divider.js";
import { PoweredBy } from "../../poweredby.js";
import { AuthSection } from "../sections/AuthSection.js";
import { ls } from "../../../strings.js";
export const MainAuthContent = ({ header = null, showSignInText = true, sections, }) => {
    return (_jsxs(_Fragment, { children: [header, showSignInText && _jsx("h3", { className: "font-semibold text-lg", children: "Sign in" }), sections?.map((section, idx) => {
                return (_jsxs(Fragment, { children: [_jsx(AuthSection, { authTypes: section }, `auth-section-${idx}`), idx !== sections.length - 1 ? (_jsx(Divider, {}, `divider-${idx}`)) : null] }, `auth-section-fragment-${idx}`));
            }), _jsxs("div", { className: "flex flex-col w-full items-center gap-1", children: [_jsxs("p", { className: "text-fg-tertiary text-center text-xs py-2", children: [`${ls.login.tosPrefix} `, _jsx("a", { className: "text-fg-accent-brand cursor-pointer underline", href: "https://www.alchemy.com/terms-conditions/end-user-terms", children: ls.login.tosLink })] }), _jsx(PoweredBy, {})] })] }));
};
//# sourceMappingURL=main.js.map