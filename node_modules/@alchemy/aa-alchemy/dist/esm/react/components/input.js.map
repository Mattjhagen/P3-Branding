{"version":3,"file":"input.js","sourceRoot":"","sources":["../../../../src/react/components/input.tsx"],"names":[],"mappings":";AAWA,MAAM,SAAS,GAAG,CAAC,EACjB,QAAQ,EACR,SAAS,EACT,KAAK,EACL,SAAS,EACT,GAAG,KAAK,EACE,EAAE,EAAE;IACd,OAAO,CACL,iBACE,SAAS,EAAE,SAAS,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,IACxD,KAAK,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAC1B,IAAI,SAAS,IAAI,EAAE,EAAE,aAEpB,QAAQ,EACT,mBAAW,KAAK,GAAU,EACzB,SAAS,IACJ,CACT,CAAC;AACJ,CAAC,CAAC;AAIF,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,KAAK,EAAS,EAAE,EAAE;IACxD,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,KAAK,EAAE,CAAC;QACjC,OAAO,CACL,iBAAO,SAAS,EAAC,eAAe,aAC7B,KAAK,IAAI,eAAM,SAAS,EAAC,YAAY,YAAE,KAAK,GAAQ,EACrD,KAAC,SAAS,OAAK,KAAK,GAAI,EACvB,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CACxB,eAAM,SAAS,EAAC,WAAW,YAAE,KAAK,CAAC,KAAK,IAAI,IAAI,GAAQ,CACzD,IACK,CACT,CAAC;IACJ,CAAC;IAED,OAAO,KAAC,SAAS,OAAK,KAAK,GAAI,CAAC;AAClC,CAAC,CAAC","sourcesContent":["type BaseProps = {\n  iconLeft?: React.ReactNode;\n  iconRight?: React.ReactNode;\n  error?: string;\n} & Omit<React.InputHTMLAttributes<HTMLInputElement>, \"ref\">;\n\ntype Props = {\n  label?: string;\n  hint?: string;\n} & BaseProps;\n\nconst BaseInput = ({\n  iconLeft,\n  iconRight,\n  error,\n  className,\n  ...props\n}: BaseProps) => {\n  return (\n    <label\n      className={`input ${props.disabled ? \"input-disabled\" : \"\"} ${\n        error ? \"input-error\" : \"\"\n      } ${className ?? \"\"}`}\n    >\n      {iconLeft}\n      <input {...props}></input>\n      {iconRight}\n    </label>\n  );\n};\n\n// this isn't used externally\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport const Input = ({ label, hint, ...props }: Props) => {\n  if (label || hint || props.error) {\n    return (\n      <label className=\"form-controls\">\n        {label && <span className=\"form-label\">{label}</span>}\n        <BaseInput {...props} />\n        {(props.error ?? hint) && (\n          <span className=\"form-hint\">{props.error ?? hint}</span>\n        )}\n      </label>\n    );\n  }\n\n  return <BaseInput {...props} />;\n};\n"]}