/// <reference types="react" />
import type { NoUndefined } from "@alchemy/aa-core";
import { type QueryClient } from "@tanstack/react-query";
import type { AlchemyAccountsConfig, AlchemyClientState } from "../config";
import type { AuthCardProps } from "./components/auth/card/index.js";
export type AlchemyAccountContextProps = {
    config: AlchemyAccountsConfig;
    queryClient: QueryClient;
    ui?: {
        openAuthModal: () => void;
        closeAuthModal: () => void;
    };
} | undefined;
export declare const AlchemyAccountContext: import("react").Context<AlchemyAccountContextProps>;
export type AlchemyAccountsUIConfig = {
    auth?: AuthCardProps & {
        addPasskeyOnSignup?: boolean;
    };
    hideError?: boolean;
};
export type AlchemyAccountsProviderProps = {
    config: AlchemyAccountsConfig;
    initialState?: AlchemyClientState;
    queryClient: QueryClient;
    uiConfig?: AlchemyAccountsUIConfig;
};
export declare const useAlchemyAccountContext: (override?: AlchemyAccountContextProps) => NoUndefined<AlchemyAccountContextProps>;
export declare const AlchemyAccountProvider: (props: React.PropsWithChildren<AlchemyAccountsProviderProps>) => import("react/jsx-runtime").JSX.Element;
