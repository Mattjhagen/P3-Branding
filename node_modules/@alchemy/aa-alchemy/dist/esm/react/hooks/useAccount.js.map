{"version":3,"file":"useAccount.js","sourceRoot":"","sources":["../../../../src/react/hooks/useAccount.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAE,oBAAoB,EAAE,MAAM,OAAO,CAAC;AAExD,OAAO,EAAE,aAAa,EAAE,MAAM,uCAAuC,CAAC;AACtE,OAAO,EACL,UAAU,GAEX,MAAM,oCAAoC,CAAC;AAC5C,OAAO,EAAE,YAAY,EAAE,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAIN,MAAM,uBAAuB,CAAC;AAC/B,OAAO,EAAE,wBAAwB,EAAE,MAAM,eAAe,CAAC;AAEzD,OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAgBvD,MAAM,UAAU,UAAU,CACxB,MAAiC;IAEjC,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,GAAG,YAAY,EAAE,GAAG,MAAM,CAAC;IACpE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,wBAAwB,EAAE,CAAC;IAC3D,MAAM,MAAM,GAAG,eAAe,EAAE,CAAC;IACjC,MAAM,OAAO,GAAG,oBAAoB,CAClC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,EAC1B,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,EAChC,GAAG,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CACjC,CAAC;IAEF,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,WAAW,CACvC;QACE,UAAU,EAAE,KAAK,IAAI,EAAE;YACrB,IAAI,OAAO,CAAC,MAAM,KAAK,cAAc,IAAI,OAAO,EAAE,OAAO,EAAE,CAAC;gBAC1D,OAAO,OAAO,CAAC,OAAO,CAAC;YACzB,CAAC;YAED,OAAO,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACvC,CAAC;QACD,WAAW,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC;QACpC,GAAG,YAAY;KAChB,EACD,WAAW,CACZ,CAAC;IAEF,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,WAAW,IAAI,CAAC,OAAO,EAAE,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;YACzE,MAAM,EAAE,CAAC;QACX,CAAC;IACH,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;IAEjE,OAAO;QACL,OAAO,EAAE,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,SAAS;QAClE,OAAO,EACL,OAAO,CAAC,MAAM,KAAK,cAAc,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO;YAC7D,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO;YACzB,CAAC,CAAC,SAAS;QACf,gBAAgB,EACd,SAAS;YACT,OAAO,EAAE,MAAM,KAAK,cAAc;YAClC,OAAO,EAAE,MAAM,KAAK,cAAc;YAClC,MAAM,CAAC,gBAAgB;YACvB,MAAM,CAAC,cAAc;KACxB,CAAC;AACJ,CAAC","sourcesContent":["\"use client\";\n\nimport { useMutation } from \"@tanstack/react-query\";\nimport { useEffect, useSyncExternalStore } from \"react\";\nimport type { Address } from \"viem\";\nimport { createAccount } from \"../../config/actions/createAccount.js\";\nimport {\n  getAccount,\n  type GetAccountParams,\n} from \"../../config/actions/getAccount.js\";\nimport { watchAccount } from \"../../config/actions/watchAccount.js\";\nimport {\n  type SupportedAccount,\n  type SupportedAccountTypes,\n  type SupportedAccounts,\n} from \"../../config/index.js\";\nimport { useAlchemyAccountContext } from \"../context.js\";\nimport type { BaseHookMutationArgs } from \"../types.js\";\nimport { useSignerStatus } from \"./useSignerStatus.js\";\n\nexport type UseAccountMutationArgs<TAccount extends SupportedAccountTypes> =\n  BaseHookMutationArgs<SupportedAccount<TAccount> | SupportedAccounts, void>;\n\nexport type UseAccountResult<TAccount extends SupportedAccountTypes> = {\n  account?: SupportedAccount<TAccount>;\n  address?: Address;\n  isLoadingAccount: boolean;\n};\n\nexport type UseAccountProps<TAccount extends SupportedAccountTypes> =\n  GetAccountParams<TAccount> & {\n    skipCreate?: boolean;\n  } & UseAccountMutationArgs<TAccount>;\n\nexport function useAccount<TAccount extends SupportedAccountTypes>(\n  params: UseAccountProps<TAccount>\n): UseAccountResult<TAccount> {\n  const { type, accountParams, skipCreate, ...mutationArgs } = params;\n  const { config, queryClient } = useAlchemyAccountContext();\n  const status = useSignerStatus();\n  const account = useSyncExternalStore(\n    watchAccount(type, config),\n    () => getAccount(params, config),\n    () => getAccount(params, config)\n  );\n\n  const { mutate, isPending } = useMutation(\n    {\n      mutationFn: async () => {\n        if (account.status !== \"RECONNECTING\" && account?.account) {\n          return account.account;\n        }\n\n        return createAccount(params, config);\n      },\n      mutationKey: [\"createAccount\", type],\n      ...mutationArgs,\n    },\n    queryClient\n  );\n\n  useEffect(() => {\n    if (!skipCreate && status.isConnected && !account?.account && !isPending) {\n      mutate();\n    }\n  }, [account, isPending, mutate, skipCreate, status.isConnected]);\n\n  return {\n    account: account.status === \"READY\" ? account?.account : undefined,\n    address:\n      account.status === \"RECONNECTING\" || account.status === \"READY\"\n        ? account.account.address\n        : undefined,\n    isLoadingAccount:\n      isPending ||\n      account?.status === \"INITIALIZING\" ||\n      account?.status === \"RECONNECTING\" ||\n      status.isAuthenticating ||\n      status.isInitializing,\n  };\n}\n"]}