import type { WaitForUserOperationTxParameters } from "@alchemy/aa-core";
import { type UseMutateFunction } from "@tanstack/react-query";
import type { Hash } from "viem";
import type { BaseHookMutationArgs } from "../types.js";
import { type UseSmartAccountClientResult } from "./useSmartAccountClient.js";
export type UseWaitForUserOperationTransactionMutationArgs = BaseHookMutationArgs<Hash, WaitForUserOperationTxParameters>;
export type UseWaitForUserOperationTransactionArgs = {
    client: UseSmartAccountClientResult["client"] | undefined;
} & UseWaitForUserOperationTransactionMutationArgs;
export type UseWaitForUserOperationTransactionResult = {
    waitForUserOperationTransaction: UseMutateFunction<Hash, Error, WaitForUserOperationTxParameters, unknown>;
    waitForUserOperationTransactionResult: Hash | undefined;
    isWaitingForUserOperationTransaction: boolean;
    error: Error | null;
};
export declare function useWaitForUserOperationTransaction({ client, }: UseWaitForUserOperationTransactionArgs): UseWaitForUserOperationTransactionResult;
