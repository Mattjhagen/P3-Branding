"use client";
import { useMutation } from "@tanstack/react-query";
import { useAlchemyAccountContext } from "../context.js";
import { ClientUndefinedHookError } from "../errors.js";
export function useDropAndReplaceUserOperation({ client, ...mutationArgs }) {
    const { queryClient } = useAlchemyAccountContext();
    const { mutate: dropAndReplaceUserOperation, data: dropAndReplaceUserOperationResult, isPending: isDroppingAndReplacingUserOperation, error, } = useMutation({
        mutationFn: async (params) => {
            if (!client) {
                throw new ClientUndefinedHookError("useDropAndReplaceUserOperation");
            }
            return client.dropAndReplaceUserOperation(params);
        },
        ...mutationArgs,
    }, queryClient);
    return {
        dropAndReplaceUserOperation,
        dropAndReplaceUserOperationResult,
        isDroppingAndReplacingUserOperation,
        error,
    };
}
//# sourceMappingURL=useDropAndReplaceUserOperation.js.map