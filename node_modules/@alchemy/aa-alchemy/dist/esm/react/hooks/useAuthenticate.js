"use client";
import { useMutation, } from "@tanstack/react-query";
import { ClientOnlyPropertyError } from "../../config/errors.js";
import { useAlchemyAccountContext } from "../context.js";
import { useSigner } from "./useSigner.js";
export function useAuthenticate(mutationArgs) {
    const { queryClient } = useAlchemyAccountContext();
    const signer = useSigner();
    const { mutate: authenticate, mutateAsync: authenticateAsync, isPending, error, } = useMutation({
        mutationFn: async (authParams) => {
            if (!signer) {
                throw new ClientOnlyPropertyError("signer");
            }
            return signer.authenticate(authParams);
        },
        ...mutationArgs,
    }, queryClient);
    return {
        authenticate,
        authenticateAsync: authenticateAsync,
        isPending,
        error,
    };
}
//# sourceMappingURL=useAuthenticate.js.map