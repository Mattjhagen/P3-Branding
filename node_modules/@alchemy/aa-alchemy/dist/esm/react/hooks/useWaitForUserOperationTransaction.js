"use client";
import { useMutation } from "@tanstack/react-query";
import { useAlchemyAccountContext } from "../context.js";
import { ClientUndefinedHookError } from "../errors.js";
import {} from "./useSmartAccountClient.js";
export function useWaitForUserOperationTransaction({ client, }) {
    const { queryClient } = useAlchemyAccountContext();
    const { mutate: waitForUserOperationTransaction, data: waitForUserOperationTransactionResult, isPending: isWaitingForUserOperationTransaction, error, } = useMutation({
        mutationFn: async (params) => {
            if (!client) {
                throw new ClientUndefinedHookError("useWaitForUserOperationTransaction");
            }
            return client.waitForUserOperationTransaction(params);
        },
    }, queryClient);
    return {
        waitForUserOperationTransaction,
        waitForUserOperationTransactionResult,
        isWaitingForUserOperationTransaction,
        error,
    };
}
//# sourceMappingURL=useWaitForUserOperationTransaction.js.map