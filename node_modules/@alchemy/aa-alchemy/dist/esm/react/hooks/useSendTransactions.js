"use client";
import {} from "@alchemy/aa-core";
import { useMutation, } from "@tanstack/react-query";
import {} from "viem";
import { useAccount as wagmi_useAccount } from "wagmi";
import { useAlchemyAccountContext } from "../context.js";
import { ClientUndefinedHookError, UnsupportedEOAActionError, } from "../errors.js";
import {} from "./useSmartAccountClient.js";
export function useSendTransactions(params) {
    const { client, ...mutationArgs } = params;
    const { queryClient, config: { _internal: { wagmiConfig }, }, } = useAlchemyAccountContext();
    const { isConnected } = wagmi_useAccount({ config: wagmiConfig });
    const { mutate: sendTransactions, mutateAsync: sendTransactionsAsync, data: sendTransactionsResult, isPending: isSendingTransactions, error, } = useMutation({
        mutationFn: async (sendTxParams) => {
            if (isConnected) {
                throw new UnsupportedEOAActionError("useSendTransactions", "batch transactions");
            }
            if (!client) {
                throw new ClientUndefinedHookError("useSendTransactions");
            }
            return client.sendTransactions(sendTxParams);
        },
        ...mutationArgs,
    }, queryClient);
    return {
        sendTransactions,
        sendTransactionsAsync,
        sendTransactionsResult,
        isSendingTransactions,
        error,
    };
}
//# sourceMappingURL=useSendTransactions.js.map