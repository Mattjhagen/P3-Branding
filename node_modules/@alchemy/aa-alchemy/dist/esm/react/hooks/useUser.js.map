{"version":3,"file":"useUser.js","sourceRoot":"","sources":["../../../../src/react/hooks/useUser.ts"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,EAAE,OAAO,EAAE,oBAAoB,EAAE,MAAM,OAAO,CAAC;AACtD,OAAO,EAAE,UAAU,IAAI,gBAAgB,EAAE,MAAM,OAAO,CAAC;AACvD,OAAO,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAC1D,OAAO,EAAE,SAAS,EAAE,MAAM,mCAAmC,CAAC;AAE9D,OAAO,EAAE,wBAAwB,EAAE,MAAM,eAAe,CAAC;AAIzD,MAAM,CAAC,MAAM,OAAO,GAAG,GAAkB,EAAE;IACzC,MAAM,EAAE,MAAM,EAAE,GAAG,wBAAwB,EAAE,CAAC;IAC9C,MAAM,EACJ,SAAS,EAAE,EAAE,WAAW,EAAE,GAC3B,GAAG,MAAM,CAAC;IAEX,MAAM,OAAO,GAAG,gBAAgB,CAAC,EAAE,MAAM,EAAE,WAAW,EAAE,CAAC,CAAC;IAC1D,MAAM,IAAI,GAAG,oBAAoB,CAC/B,SAAS,CAAC,MAAM,CAAC,EACjB,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,EAC7B,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAC9B,CAAC;IACF,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE;QAC3B,IAAI,OAAO,CAAC,MAAM,KAAK,WAAW,EAAE,CAAC;YACnC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO;YACL,OAAO,EAAE,OAAO,CAAC,OAAO;YAGxB,KAAK,EAAE,OAAO,CAAC,OAAO;YACtB,MAAM,EAAE,OAAO,CAAC,OAAO;YACvB,IAAI,EAAE,KAAc;SACrB,CAAC;IACJ,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAEtC,IAAI,OAAO;QAAE,OAAO,OAAO,CAAC;IAE5B,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["\"use client\";\n\nimport { useMemo, useSyncExternalStore } from \"react\";\nimport { useAccount as wagmi_useAccount } from \"wagmi\";\nimport { getUser } from \"../../config/actions/getUser.js\";\nimport { watchUser } from \"../../config/actions/watchUser.js\";\nimport type { User } from \"../../signer/index.js\";\nimport { useAlchemyAccountContext } from \"../context.js\";\n\nexport type UseUserResult = (User & { type: \"eoa\" | \"sca\" }) | null;\n\nexport const useUser = (): UseUserResult => {\n  const { config } = useAlchemyAccountContext();\n  const {\n    _internal: { wagmiConfig },\n  } = config;\n\n  const account = wagmi_useAccount({ config: wagmiConfig });\n  const user = useSyncExternalStore(\n    watchUser(config),\n    () => getUser(config) ?? null,\n    () => getUser(config) ?? null\n  );\n  const eoaUser = useMemo(() => {\n    if (account.status !== \"connected\") {\n      return null;\n    }\n\n    return {\n      address: account.address,\n      // for backwards compat\n      // TODO: when we upgrade to v4 we should fix this with a breaking change\n      orgId: account.address,\n      userId: account.address,\n      type: \"eoa\" as const,\n    };\n  }, [account.address, account.status]);\n\n  if (eoaUser) return eoaUser;\n\n  return user;\n};\n"]}