import type { SendTransactionParameters, SendTransactionReturnType } from "viem";
import { type UseMutateAsyncFunction, type UseMutateFunction } from "@tanstack/react-query";
import type { BaseHookMutationArgs } from "../types.js";
import { type UseSmartAccountClientResult } from "./useSmartAccountClient.js";
export type UseSendTransactionMutationArgs = BaseHookMutationArgs<SendTransactionReturnType, SendTransactionParameters>;
export type UseSendTransactionArgs = {
    client: UseSmartAccountClientResult["client"] | undefined;
} & UseSendTransactionMutationArgs;
export type UseSendTransactionResult = {
    sendTransaction: UseMutateFunction<SendTransactionReturnType, Error, SendTransactionParameters, unknown>;
    sendTransactionAsync: UseMutateAsyncFunction<SendTransactionReturnType, Error, SendTransactionParameters, unknown>;
    sendTransactionResult: SendTransactionReturnType | undefined;
    isSendingTransaction: boolean;
    error: Error | null;
};
export declare function useSendTransaction(params: UseSendTransactionArgs): UseSendTransactionResult;
