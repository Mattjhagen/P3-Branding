import plugin from "tailwindcss/plugin";
import { buttonComponents } from "./components/buttons.js";
import { colorVariables } from "./components/colorsvars.js";
import { formControlComponents } from "./components/form-controls.js";
import { inputComponents } from "./components/input.js";
import { modalComponents } from "./components/modal.js";
import { createDefaultTheme } from "./theme.js";
import { borderUtilities } from "./utilities/borders.js";
import { apply, getColorVariableName } from "./utils.js";
export const getAccountKitContentPath = () => {
    const pathToMe = require.resolve("@alchemy/aa-alchemy");
    const contentPath = `${pathToMe.replace("index.js", "")}**/*.{js,ts,jsx,tsx,mdx}`;
    return contentPath;
};
export const accountKitUi = (themeOverride) => {
    const defaultTheme = createDefaultTheme();
    const accountKitTheme = apply(defaultTheme, themeOverride);
    const { colors, ...rest } = accountKitTheme;
    return plugin(({ addComponents, addUtilities }) => {
        addUtilities(borderUtilities);
        addComponents(colorVariables(accountKitTheme));
        addComponents(buttonComponents);
        addComponents(inputComponents);
        addComponents(formControlComponents);
        addComponents(modalComponents);
    }, {
        theme: {
            extend: {
                ...rest,
                colors: Object.keys(colors).reduce((acc, key) => ({
                    ...acc,
                    [key]: `var(${getColorVariableName(key)})`,
                }), {}),
            },
        },
    });
};
export const withAccountKitUi = (config, themeOverride) => ({
    ...config,
    content: Array.isArray(config.content)
        ? [...config.content, getAccountKitContentPath()]
        : {
            ...config.content,
            files: [...config.content.files, getAccountKitContentPath()],
        },
    plugins: [...(config.plugins ?? []), accountKitUi(themeOverride)],
});
//# sourceMappingURL=plugin.js.map