import { createBundlerClient, } from "@alchemy/aa-core";
import { http } from "viem";
import { AlchemyChainSchema } from "../schema.js";
import { VERSION } from "../version.js";
export const createAlchemyPublicRpcClient = ({ chain: chain_, connectionConfig, fetchOptions = {}, }) => {
    const chain = AlchemyChainSchema.parse(chain_);
    const rpcUrl = connectionConfig.rpcUrl == null
        ? `${chain.rpcUrls.alchemy.http[0]}/${connectionConfig.apiKey ?? ""}`
        : connectionConfig.rpcUrl;
    fetchOptions.headers = {
        ...fetchOptions.headers,
        "Alchemy-AA-Sdk-Version": VERSION,
    };
    if (connectionConfig.jwt != null) {
        fetchOptions.headers = {
            ...fetchOptions.headers,
            Authorization: `Bearer ${connectionConfig.jwt}`,
        };
    }
    return createBundlerClient({
        chain: chain,
        transport: http(rpcUrl, { fetchOptions }),
    }).extend(() => ({
        updateHeaders(newHeaders) {
            fetchOptions.headers = {
                ...fetchOptions.headers,
                ...newHeaders,
            };
        },
    }));
};
//# sourceMappingURL=rpcClient.js.map