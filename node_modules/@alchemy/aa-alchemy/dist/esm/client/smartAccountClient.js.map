{"version":3,"file":"smartAccountClient.js","sourceRoot":"","sources":["../../../src/client/smartAccountClient.ts"],"names":[],"mappings":"AAAA,OAAO,EAQN,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAA8B,MAAM,MAAM,CAAC;AAClD,OAAO,EAAE,iCAAiC,EAAE,MAAM,gBAAgB,CAAC;AACnE,OAAO,EAAgC,MAAM,6BAA6B,CAAC;AAC3E,OAAO,EAAE,2BAA2B,EAAE,MAAM,cAAc,CAAC;AAG3D,OAAO,EAAE,4CAA4C,EAAE,MAAM,yCAAyC,CAAC;AACvG,OAAO,EAAE,4BAA4B,EAAE,MAAM,gBAAgB,CAAC;AAqG9D,MAAM,UAAU,+BAA+B,CAAC,EAC9C,OAAO,EACP,gBAAgB,EAChB,aAAa,EACb,YAAY,EACZ,gBAAgB,EAChB,YAAY,EACZ,iBAAiB,EACjB,GAAG,OAAO,EACsB;IAChC,MAAM,MAAM,GAAG,2BAA2B,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC1D,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,gBAAgB,EAAE,GAAG,MAAM,CAAC;IAEpD,MAAM,MAAM,GAAG,4BAA4B,CAAC;QAC1C,KAAK;QACL,gBAAgB;KACjB,CAAC,CAAC;IAEH,MAAM,UAAU,GACd,IAAI,EAAE,UAAU,IAAI,iCAAiC,CAAC,KAAK,CAAC,CAAC;IAE/D,OAAO,4CAA4C,CAAC;QAClD,MAAM;QACN,OAAO;QACP,IAAI,EAAE;YACJ,GAAG,IAAI;YACP,UAAU;SACX;QACD,gBAAgB;QAChB,aAAa;QACb,YAAY;QACZ,gBAAgB;QAChB,YAAY;QACZ,iBAAiB;KAClB,CAAC,CAAC;AACL,CAAC","sourcesContent":["import {\n  type Prettify,\n  type SmartAccountClient,\n  type SmartAccountClientActions,\n  type SmartAccountClientConfig,\n  type SmartAccountClientRpcSchema,\n  type SmartContractAccount,\n  type UserOperationContext,\n} from \"@alchemy/aa-core\";\nimport { type Chain, type Transport } from \"viem\";\nimport { getDefaultUserOperationFeeOptions } from \"../defaults.js\";\nimport { type AlchemyGasManagerConfig } from \"../middleware/gasManager.js\";\nimport { AlchemyProviderConfigSchema } from \"../schema.js\";\nimport type { AlchemyProviderConfig } from \"../type.js\";\nimport type { AlchemySmartAccountClientActions } from \"./decorators/smartAccount.js\";\nimport { createAlchemySmartAccountClientFromRpcClient } from \"./internal/smartAccountClientFromRpc.js\";\nimport { createAlchemyPublicRpcClient } from \"./rpcClient.js\";\nimport type { AlchemyRpcSchema } from \"./types.js\";\n\n// #region AlchemySmartAccountClientConfig\nexport type AlchemySmartAccountClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  context extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = {\n  account?: account;\n  useSimulation?: boolean;\n  gasManagerConfig?: AlchemyGasManagerConfig;\n} & AlchemyProviderConfig &\n  Pick<\n    SmartAccountClientConfig<transport, chain, account, context>,\n    \"customMiddleware\" | \"feeEstimator\" | \"gasEstimator\" | \"signUserOperation\"\n  >;\n// #endregion AlchemySmartAccountClientConfig\n\nexport type BaseAlchemyActions<\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  context extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = SmartAccountClientActions<chain, account, context> &\n  AlchemySmartAccountClientActions<account, context>;\n\nexport type AlchemySmartAccountClient_Base<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  actions extends Record<string, unknown> = Record<string, unknown>,\n  context extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = Prettify<\n  SmartAccountClient<\n    transport,\n    chain,\n    account,\n    actions & BaseAlchemyActions<chain, account, context>,\n    [...SmartAccountClientRpcSchema, ...AlchemyRpcSchema],\n    context\n  >\n>;\n\nexport type AlchemySmartAccountClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  actions extends Record<string, unknown> = Record<string, unknown>,\n  context extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n> = Prettify<\n  AlchemySmartAccountClient_Base<transport, chain, account, actions, context>\n>;\n\nexport function createAlchemySmartAccountClient<\n  TTransport extends Transport = Transport,\n  TChain extends Chain = Chain,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined,\n  TContext extends UserOperationContext | undefined =\n    | UserOperationContext\n    | undefined\n>({\n  account,\n  gasManagerConfig,\n  useSimulation,\n  feeEstimator,\n  customMiddleware,\n  gasEstimator,\n  signUserOperation,\n  ...config_\n}: AlchemySmartAccountClientConfig<\n  TTransport,\n  TChain,\n  TAccount,\n  TContext\n>): AlchemySmartAccountClient<\n  TTransport,\n  TChain,\n  TAccount,\n  Record<string, never>,\n  TContext\n>;\n\nexport function createAlchemySmartAccountClient({\n  account,\n  gasManagerConfig,\n  useSimulation,\n  feeEstimator,\n  customMiddleware,\n  gasEstimator,\n  signUserOperation,\n  ...config_\n}: AlchemySmartAccountClientConfig): AlchemySmartAccountClient {\n  const config = AlchemyProviderConfigSchema.parse(config_);\n  const { chain, opts, ...connectionConfig } = config;\n\n  const client = createAlchemyPublicRpcClient({\n    chain,\n    connectionConfig,\n  });\n\n  const feeOptions =\n    opts?.feeOptions ?? getDefaultUserOperationFeeOptions(chain);\n\n  return createAlchemySmartAccountClientFromRpcClient({\n    client,\n    account,\n    opts: {\n      ...opts,\n      feeOptions,\n    },\n    gasManagerConfig,\n    useSimulation,\n    feeEstimator,\n    customMiddleware,\n    gasEstimator,\n    signUserOperation,\n  });\n}\n"]}