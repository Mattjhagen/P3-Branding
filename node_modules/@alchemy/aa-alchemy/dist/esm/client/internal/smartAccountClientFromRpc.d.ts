import { type SmartContractAccount, type SmartContractAccountWithSigner, type UserOperationContext } from "@alchemy/aa-core";
import type { Chain, CustomTransport, Transport } from "viem";
import type { AlchemySmartAccountClient, AlchemySmartAccountClientConfig } from "../smartAccountClient";
import type { ClientWithAlchemyMethods } from "../types";
export type CreateAlchemySmartAccountClientFromRpcClient<TAccount extends SmartContractAccount | undefined = SmartContractAccount | undefined, TContext extends UserOperationContext | undefined = UserOperationContext | undefined> = Omit<AlchemySmartAccountClientConfig<Transport, Chain, TAccount, TContext>, "rpcUrl" | "chain" | "apiKey" | "jwt"> & {
    client: ClientWithAlchemyMethods;
};
export declare function getSignerTypeHeader<TAccount extends SmartContractAccountWithSigner>(account: TAccount): {
    "Alchemy-Aa-Sdk-Signer": string;
};
export declare function createAlchemySmartAccountClientFromRpcClient<TChain extends Chain | undefined = Chain | undefined, TAccount extends SmartContractAccount | undefined = SmartContractAccount | undefined, TContext extends UserOperationContext | undefined = UserOperationContext | undefined>(args: CreateAlchemySmartAccountClientFromRpcClient<TAccount, TContext>): AlchemySmartAccountClient<CustomTransport, TChain, TAccount, Record<string, never>, TContext>;
