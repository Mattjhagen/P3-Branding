import {} from "@alchemy/aa-core";
import {} from "viem";
import { getDefaultUserOperationFeeOptions } from "../defaults.js";
import {} from "../middleware/gasManager.js";
import { AlchemyProviderConfigSchema } from "../schema.js";
import { createAlchemySmartAccountClientFromRpcClient } from "./internal/smartAccountClientFromRpc.js";
import { createAlchemyPublicRpcClient } from "./rpcClient.js";
export function createAlchemySmartAccountClient({ account, gasManagerConfig, useSimulation, feeEstimator, customMiddleware, gasEstimator, signUserOperation, ...config_ }) {
    const config = AlchemyProviderConfigSchema.parse(config_);
    const { chain, opts, ...connectionConfig } = config;
    const client = createAlchemyPublicRpcClient({
        chain,
        connectionConfig,
    });
    const feeOptions = opts?.feeOptions ?? getDefaultUserOperationFeeOptions(chain);
    return createAlchemySmartAccountClientFromRpcClient({
        client,
        account,
        opts: {
            ...opts,
            feeOptions,
        },
        gasManagerConfig,
        useSimulation,
        feeEstimator,
        customMiddleware,
        gasEstimator,
        signUserOperation,
    });
}
//# sourceMappingURL=smartAccountClient.js.map