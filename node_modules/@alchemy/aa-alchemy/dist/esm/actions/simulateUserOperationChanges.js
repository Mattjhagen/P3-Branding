import { AccountNotFoundError, IncompatibleClientError, deepHexlify, } from "@alchemy/aa-core";
import { isAlchemySmartAccountClient } from "../client/isAlchemySmartAccountClient.js";
export const simulateUserOperationChanges = async (client, { account = client.account, overrides, ...params }) => {
    if (!account) {
        throw new AccountNotFoundError();
    }
    if (!isAlchemySmartAccountClient(client)) {
        throw new IncompatibleClientError("AlchemySmartAccountClient", "SimulateUserOperationAssetChanges", client);
    }
    const uoStruct = deepHexlify(await client.buildUserOperation({
        ...params,
        account,
        overrides,
    }));
    return client.request({
        method: "alchemy_simulateUserOperationAssetChanges",
        params: [uoStruct, account.getEntryPoint().address],
    });
};
//# sourceMappingURL=simulateUserOperationChanges.js.map