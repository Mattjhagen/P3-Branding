import { type ClientMiddlewareFn } from "@alchemy/aa-core";
import { type MultisigUserOperationContext } from "./index.js";
/**
 * A signer middleware to be used with Multisig Account Clients.
 * This middleware handles correctly aggregating signatures passed through
 * as context when sending UserOperations, proposing UserOperations, or adding signatures to a UserOperation.
 *
 * @param struct the user operation struct to be signed
 * @param param the parameters to be passed to the middleware
 * @param param.account the account to be used for signing
 * @param param.client the smart account client that will be used for RPC requests
 * @param param.context the context object containing the signatures to be aggregated {@link MultisigUserOperationContext}
 * @returns a Promise containing a UserOperation with an aggregated signature in the `signature` field
 */
export declare const multisigSignatureMiddleware: ClientMiddlewareFn<MultisigUserOperationContext>;
//# sourceMappingURL=middleware.d.ts.map