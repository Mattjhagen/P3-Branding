import { type Abi, type EntryPointDef, type SmartAccountSigner, type SmartContractAccountWithSigner, type ToSmartContractAccountParams } from "@alchemy/aa-core";
import { type Address, type Chain, type Transport } from "viem";
import type { GetEntryPointForLightAccountVersion, GetLightAccountVersion, LightAccountType, LightAccountVersionDef } from "../types.js";
export type LightAccountBase<TSigner extends SmartAccountSigner = SmartAccountSigner, TLightAccountType extends LightAccountType = LightAccountType, TLightAccountVersion extends GetLightAccountVersion<TLightAccountType> = GetLightAccountVersion<TLightAccountType>, TEntryPointVersion extends GetEntryPointForLightAccountVersion<TLightAccountType, TLightAccountVersion> = GetEntryPointForLightAccountVersion<TLightAccountType, TLightAccountVersion>> = SmartContractAccountWithSigner<TLightAccountType, TSigner, TEntryPointVersion> & {
    getLightAccountVersion: () => TLightAccountVersion;
};
export type CreateLightAccountBaseParams<TTransport extends Transport = Transport, TSigner extends SmartAccountSigner = SmartAccountSigner, TLightAccountType extends LightAccountType = LightAccountType, TLightAccountVersion extends GetLightAccountVersion<TLightAccountType> = GetLightAccountVersion<TLightAccountType>, TEntryPointVersion extends GetEntryPointForLightAccountVersion<TLightAccountType, TLightAccountVersion> = GetEntryPointForLightAccountVersion<TLightAccountType, TLightAccountVersion>> = Pick<ToSmartContractAccountParams<TLightAccountType, TTransport, Chain, TEntryPointVersion>, "transport" | "chain" | "getAccountInitCode"> & {
    abi: Abi;
    signer: TSigner;
    accountAddress: Address;
    version: LightAccountVersionDef<TLightAccountType, TLightAccountVersion>;
    entryPoint: EntryPointDef<TEntryPointVersion, Chain>;
};
export declare function createLightAccountBase<TTransport extends Transport = Transport, TSigner extends SmartAccountSigner = SmartAccountSigner, TLightAccountType extends LightAccountType = LightAccountType, TLightAccountVersion extends GetLightAccountVersion<TLightAccountType> = GetLightAccountVersion<TLightAccountType>, TEntryPointVersion extends GetEntryPointForLightAccountVersion<TLightAccountType, TLightAccountVersion> = GetEntryPointForLightAccountVersion<TLightAccountType, TLightAccountVersion>>(config: CreateLightAccountBaseParams<TTransport, TSigner, TLightAccountType, TLightAccountVersion, TEntryPointVersion>): Promise<LightAccountBase<TSigner, TLightAccountType, TLightAccountVersion, TEntryPointVersion>>;
//# sourceMappingURL=base.d.ts.map