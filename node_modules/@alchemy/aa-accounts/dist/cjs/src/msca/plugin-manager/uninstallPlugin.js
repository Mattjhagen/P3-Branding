"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encodeUninstallPluginUserOperation = exports.uninstallPlugin = void 0;
const aa_core_1 = require("@alchemy/aa-core");
const viem_1 = require("viem");
const IPluginManager_js_1 = require("../abis/IPluginManager.js");
async function uninstallPlugin(client, { overrides, account = client.account, context, ...params }) {
    if (!account) {
        throw new aa_core_1.AccountNotFoundError();
    }
    if (!(0, aa_core_1.isSmartAccountClient)(client)) {
        throw new aa_core_1.IncompatibleClientError("SmartAccountClient", "uninstallPlugin", client);
    }
    const callData = await encodeUninstallPluginUserOperation(params);
    return client.sendUserOperation({
        uo: callData,
        overrides,
        account,
        context,
    });
}
exports.uninstallPlugin = uninstallPlugin;
async function encodeUninstallPluginUserOperation(params) {
    return (0, viem_1.encodeFunctionData)({
        abi: IPluginManager_js_1.IPluginManagerAbi,
        functionName: "uninstallPlugin",
        args: [
            params.pluginAddress,
            params.config ?? "0x",
            params.pluginUninstallData ?? "0x",
        ],
    });
}
exports.encodeUninstallPluginUserOperation = encodeUninstallPluginUserOperation;
//# sourceMappingURL=uninstallPlugin.js.map