"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getThreshold = void 0;
const aa_core_1 = require("@alchemy/aa-core");
const multisigAccount_js_1 = require("../../../account/multisigAccount.js");
const plugin_js_1 = require("../plugin.js");
const errors_js_1 = require("../../../errors.js");
async function getThreshold(client, args) {
    const account = args.account ?? client.account;
    if (!account) {
        throw new aa_core_1.AccountNotFoundError();
    }
    if (!(0, multisigAccount_js_1.isMultisigModularAccount)(account)) {
        throw new errors_js_1.MultisigAccountExpectedError();
    }
    const [, threshold] = await plugin_js_1.MultisigPlugin.getContract(client, args.pluginAddress).read.ownershipInfoOf([account.address]);
    return threshold === 0n ? account.getLocalThreshold() : threshold;
}
exports.getThreshold = getThreshold;
//# sourceMappingURL=getThreshold.js.map