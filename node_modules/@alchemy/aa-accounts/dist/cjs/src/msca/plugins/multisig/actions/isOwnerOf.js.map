{"version":3,"file":"isOwnerOf.js","sourceRoot":"","sources":["../../../../../../../src/msca/plugins/multisig/actions/isOwnerOf.ts"],"names":[],"mappings":";;;AAAA,8CAK0B;AAG1B,4CAA8C;AAEvC,KAAK,UAAU,SAAS,CAO7B,MAA4C,EAC5C,IAC+B;IAE/B,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC;IAC/C,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,MAAM,IAAI,8BAAoB,EAAE,CAAC;IACnC,CAAC;IAGD,MAAM,QAAQ,GAAG,0BAAc,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IACxE,OAAO,MAAM,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AACxE,CAAC;AAnBD,8BAmBC","sourcesContent":["import {\n  AccountNotFoundError,\n  type Address,\n  type GetAccountParameter,\n  type SmartContractAccount,\n} from \"@alchemy/aa-core\";\nimport { type Chain, type Client, type Transport } from \"viem\";\nimport type { GetPluginAddressParameter } from \"../../types.js\";\nimport { MultisigPlugin } from \"../plugin.js\";\n\nexport async function isOwnerOf<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends SmartContractAccount | undefined =\n    | SmartContractAccount\n    | undefined\n>(\n  client: Client<TTransport, TChain, TAccount>,\n  args: { address: Address } & GetPluginAddressParameter &\n    GetAccountParameter<TAccount>\n) {\n  const account = args.account ?? client.account;\n  if (!account) {\n    throw new AccountNotFoundError();\n  }\n  // TODO: check if the account actually has the plugin installed\n  // either via account loupe or checking if the supports interface call passes on the account\n  const contract = MultisigPlugin.getContract(client, args.pluginAddress);\n  return await contract.read.isOwnerOf([account.address, args.address]);\n}\n"]}