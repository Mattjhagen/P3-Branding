{"version":3,"file":"multiOwnerLightAccount.js","sourceRoot":"","sources":["../../../../../src/light-account/clients/multiOwnerLightAccount.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,wBAAwB,GAMzB,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAoD,MAAM,MAAM,CAAC;AACxE,OAAO,EACL,4BAA4B,GAG7B,MAAM,2BAA2B,CAAC;AACnC,OAAO,EACL,mCAAmC,GAEpC,MAAM,yCAAyC,CAAC;AAuCjD,MAAM,CAAC,KAAK,UAAU,kCAAkC,CAAC,EACvD,OAAO,EACP,SAAS,EACT,KAAK,EACL,GAAG,YAAY,EAC0B;IACzC,MAAM,YAAY,GAAG,MAAM,4BAA4B,CAAC;QACtD,GAAG,OAAO;QACV,SAAS;QACT,KAAK;KACN,CAAC,CAAC;IAEH,OAAO,wBAAwB,CAAC;QAC9B,GAAG,YAAY;QACf,SAAS;QACT,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,YAAY;KACtB,CAAC,CAAC,MAAM,CAAC,mCAAmC,CAAC,CAAC;AACjD,CAAC","sourcesContent":["import {\n  createSmartAccountClient,\n  type SmartAccountClient,\n  type SmartAccountClientActions,\n  type SmartAccountClientConfig,\n  type SmartAccountSigner,\n  type SmartContractAccount,\n} from \"@alchemy/aa-core\";\nimport { type Chain, type CustomTransport, type Transport } from \"viem\";\nimport {\n  createMultiOwnerLightAccount,\n  type CreateMultiOwnerLightAccountParams,\n  type MultiOwnerLightAccount,\n} from \"../accounts/multiOwner.js\";\nimport {\n  multiOwnerLightAccountClientActions,\n  type MultiOwnerLightAccountClientActions,\n} from \"../decorators/multiOwnerLightAccount.js\";\n\nexport type CreateMultiOwnerLightAccountClientParams<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TSigner extends SmartAccountSigner = SmartAccountSigner\n> = {\n  transport: CreateMultiOwnerLightAccountParams<\n    TTransport,\n    TSigner\n  >[\"transport\"];\n  chain: CreateMultiOwnerLightAccountParams<TTransport, TSigner>[\"chain\"];\n  account: Omit<\n    CreateMultiOwnerLightAccountParams<TTransport, TSigner>,\n    \"transport\" | \"chain\"\n  >;\n} & Omit<\n  SmartAccountClientConfig<TTransport, TChain>,\n  \"transport\" | \"account\" | \"chain\"\n>;\n\nexport function createMultiOwnerLightAccountClient<\n  TChain extends Chain | undefined = Chain | undefined,\n  TSigner extends SmartAccountSigner = SmartAccountSigner\n>(\n  args: CreateMultiOwnerLightAccountClientParams<Transport, TChain, TSigner>\n): Promise<\n  SmartAccountClient<\n    CustomTransport,\n    Chain,\n    MultiOwnerLightAccount<TSigner>,\n    SmartAccountClientActions<Chain, SmartContractAccount> &\n      MultiOwnerLightAccountClientActions<\n        TSigner,\n        MultiOwnerLightAccount<TSigner>\n      >\n  >\n>;\n\nexport async function createMultiOwnerLightAccountClient({\n  account,\n  transport,\n  chain,\n  ...clientConfig\n}: CreateMultiOwnerLightAccountClientParams): Promise<SmartAccountClient> {\n  const lightAccount = await createMultiOwnerLightAccount({\n    ...account,\n    transport,\n    chain,\n  });\n\n  return createSmartAccountClient({\n    ...clientConfig,\n    transport,\n    chain: chain,\n    account: lightAccount,\n  }).extend(multiOwnerLightAccountClientActions);\n}\n"]}