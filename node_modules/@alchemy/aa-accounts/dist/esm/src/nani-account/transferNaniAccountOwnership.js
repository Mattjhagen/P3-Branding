import { AccountNotFoundError, IncompatibleClientError, isSmartAccountClient, } from "@alchemy/aa-core";
export const transferOwnership = async (client, args) => {
    const { newOwner, waitForTxn = false, account: account_ = client.account, } = args;
    if (!account_) {
        throw new AccountNotFoundError();
    }
    if (!isSmartAccountClient(client)) {
        throw new IncompatibleClientError("SmartAccountClient", "transferOwnership", client);
    }
    const account = account_;
    const data = account.encodeTransferOwnership(await newOwner.getAddress());
    const result = await client.sendUserOperation({
        uo: {
            target: account.address,
            data,
        },
        account,
    });
    if (waitForTxn) {
        return client.waitForUserOperationTransaction(result);
    }
    return result.hash;
};
//# sourceMappingURL=transferNaniAccountOwnership.js.map