import type { SmartContractAccount, SmartAccountSigner } from "@alchemy/aa-core";
import { type Transport, type Chain, type Client, type PublicRpcSchema, type PublicActions, type Hex } from "viem";
import type { SignerType } from "../types";
type GetSignerTypeParams<TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TAccount extends SmartContractAccount | undefined = SmartContractAccount | undefined, TClient extends Client<TTransport, TChain, TAccount, PublicRpcSchema, PublicActions> = Client<TTransport, TChain, TAccount, PublicRpcSchema, PublicActions>> = {
    signer: SmartAccountSigner<any>;
    signature: Hex;
    client: TClient;
};
export declare const getSignerType: <TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined>({ client, signature, signer, }: GetSignerTypeParams<TTransport, TChain, SmartContractAccount | undefined, Client<TTransport, TChain, SmartContractAccount | undefined, PublicRpcSchema, PublicActions>>) => Promise<SignerType>;
export {};
