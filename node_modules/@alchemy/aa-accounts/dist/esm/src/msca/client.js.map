{"version":3,"file":"client.js","sourceRoot":"","sources":["../../../../src/msca/client.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,wBAAwB,EACxB,yBAAyB,GAI1B,MAAM,kBAAkB,CAAC;AAC1B,OAAO,EAAoD,MAAM,MAAM,CAAC;AAExE,OAAO,EACL,mBAAmB,GAEpB,MAAM,8BAA8B,CAAC;AACtC,OAAO,EACL,8BAA8B,GAG/B,MAAM,gCAAgC,CAAC;AACxC,OAAO,EACL,4BAA4B,GAG7B,MAAM,8BAA8B,CAAC;AACtC,OAAO,EACL,oBAAoB,GAErB,MAAM,+BAA+B,CAAC;AACvC,OAAO,EACL,uBAAuB,GAExB,MAAM,gCAAgC,CAAC;AACxC,OAAO,EACL,qBAAqB,GAGtB,MAAM,6BAA6B,CAAC;AACrC,OAAO,EAAE,2BAA2B,EAAE,MAAM,kCAAkC,CAAC;AA8C/E,MAAM,CAAC,KAAK,UAAU,oCAAoC,CAAC,EACzD,OAAO,EACP,SAAS,EACT,KAAK,EACL,GAAG,YAAY,EAC4B;IAC3C,MAAM,cAAc,GAAG,MAAM,8BAA8B,CAAC;QAC1D,GAAG,OAAO;QACV,SAAS;QACT,KAAK;KACN,CAAC,CAAC;IAEH,OAAO,wBAAwB,CAAC;QAC9B,GAAG,YAAY;QACf,SAAS;QACT,KAAK;QACL,OAAO,EAAE,cAAc;KACxB,CAAC;SACC,MAAM,CAAC,oBAAoB,CAAC;SAC5B,MAAM,CAAC,uBAAuB,CAAC;SAC/B,MAAM,CAAC,mBAAmB,CAAC,CAAC;AACjC,CAAC;AAoBD,MAAM,CAAC,KAAK,UAAU,kCAAkC,CAAC,EACvD,OAAO,EACP,SAAS,EACT,KAAK,EACL,GAAG,YAAY,EAC0B;IAUzC,MAAM,cAAc,GAAG,MAAM,4BAA4B,CAAC;QACxD,GAAG,OAAO;QACV,SAAS;QACT,KAAK;KACN,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG,wBAAwB,CAAC;QACtC,GAAG,YAAY;QACf,SAAS;QACT,KAAK;QACL,OAAO,EAAE,cAAc;QACvB,iBAAiB,EAAE,2BAA2B;KAC/C,CAAC;SACC,MAAM,CAAC,yBAAyB,CAAC;SACjC,MAAM,CAAC,oBAAoB,CAAC;SAC5B,MAAM,CAAC,qBAAqB,CAAC;SAC7B,MAAM,CAAC,mBAAmB,CAAC,CAAC;IAE/B,OAAO,MAAM,CAAC;AAChB,CAAC","sourcesContent":["import {\n  createSmartAccountClient,\n  smartAccountClientActions,\n  type SmartAccountClient,\n  type SmartAccountClientRpcSchema,\n  type SmartAccountSigner,\n} from \"@alchemy/aa-core\";\nimport { type Chain, type CustomTransport, type Transport } from \"viem\";\nimport type { CreateLightAccountClientParams } from \"../light-account/clients/lightAccount\";\nimport {\n  accountLoupeActions,\n  type AccountLoupeActions,\n} from \"./account-loupe/decorator.js\";\nimport {\n  createMultiOwnerModularAccount,\n  type CreateMultiOwnerModularAccountParams,\n  type MultiOwnerModularAccount,\n} from \"./account/multiOwnerAccount.js\";\nimport {\n  createMultisigModularAccount,\n  type CreateMultisigModularAccountParams,\n  type MultisigModularAccount,\n} from \"./account/multisigAccount.js\";\nimport {\n  pluginManagerActions,\n  type PluginManagerActions,\n} from \"./plugin-manager/decorator.js\";\nimport {\n  multiOwnerPluginActions,\n  type MultiOwnerPluginActions,\n} from \"./plugins/multi-owner/index.js\";\nimport {\n  multisigPluginActions,\n  type MultisigPluginActions,\n  type MultisigUserOperationContext,\n} from \"./plugins/multisig/index.js\";\nimport { multisigSignatureMiddleware } from \"./plugins/multisig/middleware.js\";\n\nexport type CreateMultiOwnerModularAccountClientParams<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TSigner extends SmartAccountSigner = SmartAccountSigner\n> = {\n  account: Omit<\n    CreateMultiOwnerModularAccountParams<TTransport, TSigner>,\n    \"transport\" | \"chain\"\n  >;\n} & Omit<\n  CreateLightAccountClientParams<TTransport, TChain, TSigner>,\n  \"account\"\n>;\n\nexport type CreateMultisigModularAccountClientParams<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TSigner extends SmartAccountSigner = SmartAccountSigner\n> = {\n  account: Omit<\n    CreateMultisigModularAccountParams<TTransport, TSigner>,\n    \"transport\" | \"chain\"\n  >;\n} & Omit<\n  CreateLightAccountClientParams<TTransport, TChain, TSigner>,\n  \"account\"\n>;\n\nexport function createMultiOwnerModularAccountClient<\n  TChain extends Chain | undefined = Chain | undefined,\n  TSigner extends SmartAccountSigner = SmartAccountSigner\n>(\n  args: CreateMultiOwnerModularAccountClientParams<Transport, TChain, TSigner>\n): Promise<\n  SmartAccountClient<\n    CustomTransport,\n    Chain,\n    MultiOwnerModularAccount<TSigner>,\n    MultiOwnerPluginActions<MultiOwnerModularAccount<TSigner>> &\n      PluginManagerActions<MultiOwnerModularAccount<TSigner>> &\n      AccountLoupeActions<MultiOwnerModularAccount<TSigner>>\n  >\n>;\n\nexport async function createMultiOwnerModularAccountClient({\n  account,\n  transport,\n  chain,\n  ...clientConfig\n}: CreateMultiOwnerModularAccountClientParams): Promise<SmartAccountClient> {\n  const modularAccount = await createMultiOwnerModularAccount({\n    ...account,\n    transport,\n    chain,\n  });\n\n  return createSmartAccountClient({\n    ...clientConfig,\n    transport,\n    chain,\n    account: modularAccount,\n  })\n    .extend(pluginManagerActions)\n    .extend(multiOwnerPluginActions)\n    .extend(accountLoupeActions);\n}\n\nexport function createMultisigModularAccountClient<\n  TChain extends Chain | undefined = Chain | undefined,\n  TSigner extends SmartAccountSigner = SmartAccountSigner\n>(\n  args: CreateMultisigModularAccountClientParams<Transport, TChain, TSigner>\n): Promise<\n  SmartAccountClient<\n    CustomTransport,\n    Chain,\n    MultisigModularAccount<TSigner>,\n    MultisigPluginActions<MultisigModularAccount<TSigner>> &\n      PluginManagerActions<MultisigModularAccount<TSigner>> &\n      AccountLoupeActions<MultisigModularAccount<TSigner>>,\n    SmartAccountClientRpcSchema,\n    MultisigUserOperationContext\n  >\n>;\n\nexport async function createMultisigModularAccountClient({\n  account,\n  transport,\n  chain,\n  ...clientConfig\n}: CreateMultisigModularAccountClientParams): Promise<\n  SmartAccountClient<\n    Transport,\n    Chain,\n    MultisigModularAccount<SmartAccountSigner>,\n    {},\n    SmartAccountClientRpcSchema,\n    MultisigUserOperationContext\n  >\n> {\n  const modularAccount = await createMultisigModularAccount({\n    ...account,\n    transport,\n    chain,\n  });\n\n  const client = createSmartAccountClient({\n    ...clientConfig,\n    transport,\n    chain,\n    account: modularAccount,\n    signUserOperation: multisigSignatureMiddleware,\n  })\n    .extend(smartAccountClientActions)\n    .extend(pluginManagerActions)\n    .extend(multisigPluginActions)\n    .extend(accountLoupeActions);\n\n  return client;\n}\n"]}