import { createSmartAccountClient, smartAccountClientActions, } from "@alchemy/aa-core";
import {} from "viem";
import { accountLoupeActions, } from "./account-loupe/decorator.js";
import { createMultiOwnerModularAccount, } from "./account/multiOwnerAccount.js";
import { createMultisigModularAccount, } from "./account/multisigAccount.js";
import { pluginManagerActions, } from "./plugin-manager/decorator.js";
import { multiOwnerPluginActions, } from "./plugins/multi-owner/index.js";
import { multisigPluginActions, } from "./plugins/multisig/index.js";
import { multisigSignatureMiddleware } from "./plugins/multisig/middleware.js";
export async function createMultiOwnerModularAccountClient({ account, transport, chain, ...clientConfig }) {
    const modularAccount = await createMultiOwnerModularAccount({
        ...account,
        transport,
        chain,
    });
    return createSmartAccountClient({
        ...clientConfig,
        transport,
        chain,
        account: modularAccount,
    })
        .extend(pluginManagerActions)
        .extend(multiOwnerPluginActions)
        .extend(accountLoupeActions);
}
export async function createMultisigModularAccountClient({ account, transport, chain, ...clientConfig }) {
    const modularAccount = await createMultisigModularAccount({
        ...account,
        transport,
        chain,
    });
    const client = createSmartAccountClient({
        ...clientConfig,
        transport,
        chain,
        account: modularAccount,
        signUserOperation: multisigSignatureMiddleware,
    })
        .extend(smartAccountClientActions)
        .extend(pluginManagerActions)
        .extend(multisigPluginActions)
        .extend(accountLoupeActions);
    return client;
}
//# sourceMappingURL=client.js.map