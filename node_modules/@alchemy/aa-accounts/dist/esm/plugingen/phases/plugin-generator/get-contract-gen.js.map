{"version":3,"file":"get-contract-gen.js","sourceRoot":"","sources":["../../../../../plugingen/phases/plugin-generator/get-contract-gen.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,QAAQ,CAAC;AAG5B,MAAM,CAAC,MAAM,mBAAmB,GAAU,KAAK,EAAE,KAAK,EAAE,EAAE;IACxD,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,KAAK,CAAC;IAE/C,SAAS,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1D,SAAS,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,uBAAuB,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACnE,SAAS,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACrD,SAAS,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACvD,SAAS,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IAC1D,SAAS,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACpD,SAAS,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,oBAAoB,EAAE,CAAC,CAAC;IAE9D,OAAO,CAAC,IAAI,CAAC,MAAM,CAAA;;;;oCAIe,QAAQ,CAAC,IAAI;;;;;eAKlC,QAAQ,CAAC,IAAI;;;IAGxB,CAAC,CAAC;IAEJ,OAAO,KAAK,CAAC;AACf,CAAC,CAAC","sourcesContent":["import dedent from \"dedent\";\nimport type { Phase } from \"../../types\";\n\nexport const GetContractGenPhase: Phase = async (input) => {\n  const { content, contract, addImport } = input;\n\n  addImport(\"viem\", { name: \"getContract\", isType: false });\n  addImport(\"viem\", { name: \"GetContractReturnType\", isType: true });\n  addImport(\"viem\", { name: \"Address\", isType: true });\n  addImport(\"viem\", { name: \"Transport\", isType: true });\n  addImport(\"viem\", { name: \"PublicClient\", isType: true });\n  addImport(\"viem\", { name: \"Client\", isType: true });\n  addImport(\"@alchemy/aa-core\", { name: \"ChainNotFoundError\" });\n\n  content.push(dedent`\n  getContract: <C extends Client>(\n    client: C,\n    address?: Address\n  ): GetContractReturnType<typeof ${contract.name}Abi, PublicClient, Address> => {\n      if (!client.chain) throw new ChainNotFoundError();\n\n      return getContract({\n        address: address || addresses[client.chain.id],\n        abi: ${contract.name}Abi,\n        client: client,\n      });\n  }`);\n\n  return input;\n};\n"]}